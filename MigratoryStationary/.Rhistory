Fullmod2 <- glmer(data=MigStatExp_1, formula = NosemaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod2)
#Varroa prevalence using glmer
Fullmod2 <- glmer(data=MigStatExp_1, formula = NosemaBinary~Treatment * SamplingEvent + (1|ID)+ (1|Yard), family = binomial(link = "logit"))
Anova(Fullmod2)
nbNos <- lmer(data=MigStatExp_1, formula = NosemaLoadRecount~Treatment * SamplingEvent + (1|ID))
Anova(nbNos)
nbNos <- lmer(data=MigStatExp_1, formula = NosemaLoadRecount~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(nbNos)
nbFOB <- lmer(data=MigStatExp_1, formula = FOB~Treatment * SamplingEvent + (1|ID))
Anova(nbFOB)
nbFOB <- lmer(data=MigStatExp_1, formula = FOB~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(nbFOB)
nbBP <- lmer(data=MigStatExp_1, formula = BroodPattern~Treatment * SamplingEvent + (1|ID))
Anova(nbBP)
nbBP <- lmer(data=MigStatExp_1, formula = BroodPattern~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(nbBP)
# Setting up dataframe without time point 1 for Experiment 2 data (Stationary vs Exposed)
MigStatExp_2_plot<-MigStat[!(MigStat$SamplingEvent=='1'),]
# same data frame but without migratory for analysis purposes
MigStatExp_2_analysis<-MigStatExp_2_plot[!(MigStatExp_2_plot$Treatment=="Migratory"),]
# same data frame but only T2 to check initial levels
MigStatExp_2_analysis_T2<-MigStatExp_2_analysis[(MigStatExp_2_analysis$SamplingEvent=='2'),]
#DWV prevalence using glmer
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = DWVbinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod3)
#DWV prevalence using glmer
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = DWVbinary~Treatment * SamplingEvent + (1|ID)+ (1|Yard), family = binomial(link = "logit"))
Anova(Fullmod3)
Fullmod4 <- lmer(data=MigStatExp_2_analysis, formula = logDWV~Treatment * SamplingEvent + (1|ID))
Anova(Fullmod4)
Fullmod4 <- lmer(data=MigStatExp_2_analysis, formula = logDWV~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(Fullmod4)
Fullmod5 <- lmer(data=MigStatExp_2_analysis, formula = logBQCV~Treatment * SamplingEvent + (1|ID))
Anova(Fullmod5)
Fullmod5 <- lmer(data=MigStatExp_2_analysis, formula = logBQCV~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(Fullmod5)
Fullmod10 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"), nAGQ = 0)
Anova(Fullmod10)
Fullmod10 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID)+ (1|Yard), family = binomial(link = "logit"), nAGQ = 0)
Anova(Fullmod10)
Fullmod15 <- lmer(data=MigStatExp_2_analysis, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(Fullmod15)
Fullmod15 <- lmer(data=MigStatExp_2_analysis, formula = Varroa~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(Fullmod15)
Fullmod11 <- glmer(data=MigStatExp_2_analysis, formula = NosemaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod11)
Fullmod11 <- glmer(data=MigStatExp_2_analysis, formula = NosemaBinary~Treatment * SamplingEvent + (1|ID)+ (1|Yard), family = binomial(link = "logit"))
Anova(Fullmod11)
Fullmod6 <- lmer(data=MigStatExp_2_analysis, formula = NosemaLoadRecount~Treatment * SamplingEvent + (1|ID))
Anova(Fullmod6)
Fullmod6 <- lmer(data=MigStatExp_2_analysis, formula = NosemaLoadRecount~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(Fullmod6)
Fullmod7 <- lmer(data=MigStatExp_2_analysis, formula = FOB~Treatment * SamplingEvent + (1|ID))
Anova(Fullmod7)
Fullmod7 <- lmer(data=MigStatExp_2_analysis, formula = FOB~Treatment * SamplingEvent + (1|ID)+ (1|Yard))
Anova(Fullmod7)
View(MigStat)
# Read in Temp. Data:
TempDat <- read.table("Data/TempData.csv", header=TRUE, sep = ",", stringsAsFactors = FALSE)
# remove first and last four days for each state:
TempDat <- TempDat[-c(1,2,3,4,32,33,34,35,36,37,38,39,67,68,69,70),]
temp <- aov(AVG~State,data=TempDat)
summary(temp)
temp
View(TempDat)
table(TempDat$AVG, TempDat$State)
length(TempDat$AVG)
table(TempDat$State)
# Preliminaries:
# Clear memory of characters:
rm(list=ls())
# Read in Nosema/Varroa/Eco Data:
MigStat <- read.table("Data/MigStatClean.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
MigStat$Treatment <- ifelse(MigStat$Treatment=="Stationary","Stationary\n(Isolated)", ifelse(MigStat$Treatment=="Migratory", "Migratory", "Exposed"))
MigStat$NosemaLoadRecount1 <- ((MigStat$NosemaLoadRecount*4000000)/80)/100000
# required packages:
library(plyr)
library(ggplot2)
library(dplyr)
library(lme4)
library(car)
library(MASS)
library(cowplot)
# Setting up dataframe without Exposed for Experiment 1 data (Mig vs Stationary)
MigStatExp_1<-MigStat[!(MigStat$Treatment=="Exposed"),]
# Summary of DWV prev. for experiment 1
VirusSum2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(logDWV),
mean = mean(logDWV, na.rm=TRUE),
sd = sd(logDWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
DWVload1 <- ggplot(data = VirusSum2,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 15), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
DWVload1
# Summary of BQCV load. for experiment 1
VirusSum1 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(logBQCV),
mean = mean(logBQCV, na.rm=TRUE),
sd = sd(logBQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV prev. for experiment 1
BQCVload1 <- ggplot(data = VirusSum1,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(10, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.3, .85),legend.key.width=unit(5,"line")) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
BQCVload1
# Summary of Varroa prev. for experiment 1
VarSum <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting Varroa prev. for experiment 1
VARload1 <- ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees)") + coord_cartesian(ylim = c(0, 3), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position="none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
VARload1
nbVAR <- lmer(data=MigStatExp_1, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(nbVAR)
hist(log(MigStatExp_1$Varroa+1))
# Summary of FOB for experiment 1
FOB <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 1
FOB1 <- ggplot(data = FOB,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(5, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + scale_x_continuous(breaks=c(1,2,3))
FOB1
# Summary of DWV VL for experiment 2
VirusSum6 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(logDWV),
mean = mean(logDWV, na.rm=TRUE),
sd = sd(logDWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV VL for experiment 2
DWVload2 <- ggplot(data = VirusSum6,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 17), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none")+ scale_x_continuous(breaks=c(1,2,3))
DWVload2
# Summary of BQCV VL for experiment 2
VirusSum8 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(logBQCV),
mean = mean(logBQCV, na.rm=TRUE),
sd = sd(logBQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV VL for experiment 2
BQCVload2 <- ggplot(data = VirusSum8,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(10, 25), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position=c(.2, .85), legend.key.width=unit(10,"line"), legend.key.height = unit(3, "line")) + scale_x_continuous(breaks=c(1,2,3))
BQCVload2
# Summary of varroa load for experiment 2
VarSum2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting varroa load for experiment 2
VARload2 <- ggplot(data = VarSum2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees)") + coord_cartesian(ylim = c(0, 5), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none") + scale_x_continuous(breaks=c(1,2,3))
VARload2
# Summary of FOB for experiment 2
FOB2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 2
FOB3 <- ggplot(data = FOB2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(6, 30), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none") + scale_x_continuous(breaks=c(1,2,3))
FOB3
# create seperate data frames for each time point:
MigStatSplit <- split(MigStat, MigStat$SamplingEvent)
Mig1 <- MigStatSplit$`1`
Mig2 <- MigStatSplit$`2`
Mig3 <- MigStatSplit$`3`
# run LDA
time2 <- lda(Treatment~Varroa + NosemaLoadRecount + logBQCV + logDWV + DWVbinary + FOB + BroodPattern + NosemaBinary + VarroaBinary, data=Mig2, na.action="na.omit")
# LDA prep function
ggplotLDAPrep <- function(x){
if (!is.null(Terms <- x$terms)) {
data <- model.frame(x)
X <- model.matrix(delete.response(Terms), data)
g <- model.response(data)
xint <- match("(Intercept)", colnames(X), nomatch = 0L)
if (xint > 0L)
X <- X[, -xint, drop = FALSE]
}
means <- colMeans(x$means)
X <- scale(X, center = means, scale = FALSE) %*% x$scaling
rtrn <- as.data.frame(cbind(X,labels=as.character(g)))
rtrn <- data.frame(X,labels=as.character(g))
return(rtrn)
}
# fit graph for LDA
fitGraph <- ggplotLDAPrep(time2)
# graph for LDA
LDAone <- ggplot(fitGraph, aes(LD1,LD2, color=labels))+geom_point(size=6) + theme_minimal(base_size = 30) + theme(legend.key.width = unit(3, "line"), legend.key.height = unit(3, "line"), legend.position = c(x=.82, y=.85), legend.background = element_rect(fill="white", size=.5), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid')) + stat_ellipse(show.legend = FALSE, level=.7) + labs(x="LD1 (88.36%)", y="LD2 (11.64%)") + scale_color_manual(values=c("black", "red", "blue"), name="Treatment",breaks=c("Exposed", "Migratory", "Stationary"), labels=c("Exposed", "Migratory", "Stationary\n(Isolated)"))
LDAone
# run LDA
time3 <- lda(Treatment~Varroa + NosemaLoadRecount + logBQCV + logDWV + DWVbinary + FOB + BroodPattern + NosemaBinary + VarroaBinary, data=Mig3, na.action="na.omit")
# graph for LDA
fitGraph1 <- ggplotLDAPrep(time3)
# graph for LDA
LDAtwo <- ggplot(fitGraph1, aes(LD1,LD2, color=labels))+geom_point(size=6) + theme_minimal(base_size = 30) + scale_colour_manual(values = c("black", "red","blue" )) + theme(legend.position= "none", axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid')) + stat_ellipse(show.legend = FALSE, level=.7) + labs(color="Treatment:", x="LD1 (68.73%)", y="LD2 (31.27%)")
LDAtwo
# experiment 1:
plot_grid(BQCVload1, DWVload1, VARload1, FOB1, labels = c("A", "B", "C", "D"), ncol = 2,align="hv")
# experiment 2:
plot_grid(BQCVload2, DWVload2, VARload2, FOB3, labels = c("A", "B", "C", "D"), ncol = 2,  align="hv", label_size = 30)
# LDA 1 and 2:
plot_grid(LDAone, LDAtwo, labels = c("A", "B"), align="hv",  label_size = 30)
# Summary of BQCV load. for experiment 1
VirusSum1 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(logBQCV),
mean = mean(logBQCV, na.rm=TRUE),
sd = sd(logBQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV prev. for experiment 1
BQCVload1 <- ggplot(data = VirusSum1,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(10, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.3, .85),legend.key.width=unit(5,"line")) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
BQCVload1
MigStat$log10BQCV <- MigStat$BQCVload
MigStat$log10DWV <- MigStat$DWVload
MigStat$log10BQCV
MigStat$log10BQCV <- log10(MigStat$BQCVload+1)
MigStat$log10DWV <- log10(MigStat$DWVload + 1)
MigStat$log10BQCV
MigStat$log10DWV
# Preliminaries:
# Clear memory of characters:
rm(list=ls())
# Read in Nosema/Varroa/Eco Data:
MigStat <- read.table("Data/MigStatClean.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
MigStat$log10BQCV <- log10(MigStat$BQCVload+1)
MigStat$log10DWV <- log10(MigStat$DWVload + 1)
# Summary of DWV prev. for experiment 1
VirusSum2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(log10DWV),
mean = mean(log10DWV, na.rm=TRUE),
sd = sd(log10DWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
DWVload1 <- ggplot(data = VirusSum2,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 15), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
DWVload1
# plotting DWV prev. for experiment 1
DWVload1 <- ggplot(data = VirusSum2,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 10), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
DWVload1
# plotting DWV prev. for experiment 1
DWVload1 <- ggplot(data = VirusSum2,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 8), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
DWVload1
# Summary of BQCV load. for experiment 1
VirusSum1 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(log10BQCV),
mean = mean(log10BQCV, na.rm=TRUE),
sd = sd(log10BQCV, na.rm = TRUE),
se = sd / sqrt(n))
# Setting up dataframe without Exposed for Experiment 1 data (Mig vs Stationary)
MigStatExp_1<-MigStat[!(MigStat$Treatment=="Exposed"),]
# Summary of DWV prev. for experiment 1
VirusSum2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(log10DWV),
mean = mean(log10DWV, na.rm=TRUE),
sd = sd(log10DWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
DWVload1 <- ggplot(data = VirusSum2,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 8), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
DWVload1
# Summary of BQCV load. for experiment 1
VirusSum1 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(log10BQCV),
mean = mean(log10BQCV, na.rm=TRUE),
sd = sd(log10BQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV prev. for experiment 1
BQCVload1 <- ggplot(data = VirusSum1,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(10, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.3, .85),legend.key.width=unit(5,"line")) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
BQCVload1
# plotting BQCV prev. for experiment 1
BQCVload1 <- ggplot(data = VirusSum1,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 10), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.3, .85),legend.key.width=unit(5,"line")) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
BQCVload1
# plotting BQCV prev. for experiment 1
BQCVload1 <- ggplot(data = VirusSum1,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(3, 12), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.3, .85),legend.key.width=unit(5,"line")) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
BQCVload1
# Summary of Varroa prev. for experiment 1
VarSum <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting Varroa prev. for experiment 1
VARload1 <- ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees)") + coord_cartesian(ylim = c(0, 3), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position="none") + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
VARload1
nbVAR <- lmer(data=MigStatExp_1, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(nbVAR)
hist(log(MigStatExp_1$Varroa+1))
# Summary of FOB for experiment 1
FOB <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 1
FOB1 <- ggplot(data = FOB,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(5, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position = "none") + scale_x_continuous(breaks=c(1,2,3))
FOB1
# Summary of DWV VL for experiment 2
VirusSum6 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(logDWV),
mean = mean(logDWV, na.rm=TRUE),
sd = sd(logDWV, na.rm = TRUE),
se = sd / sqrt(n))
# Summary of DWV VL for experiment 2
VirusSum6 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(log10DWV),
mean = mean(log10DWV, na.rm=TRUE),
sd = sd(log10DWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV VL for experiment 2
DWVload2 <- ggplot(data = VirusSum6,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 17), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none")+ scale_x_continuous(breaks=c(1,2,3))
DWVload2
# plotting DWV VL for experiment 2
DWVload2 <- ggplot(data = VirusSum6,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 10), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none")+ scale_x_continuous(breaks=c(1,2,3))
DWVload2
# plotting DWV VL for experiment 2
DWVload2 <- ggplot(data = VirusSum6,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 8), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none")+ scale_x_continuous(breaks=c(1,2,3))
DWVload2
# Summary of BQCV VL for experiment 2
VirusSum8 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(log10BQCV),
mean = mean(log10BQCV, na.rm=TRUE),
sd = sd(log10BQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV VL for experiment 2
BQCVload2 <- ggplot(data = VirusSum8,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(3, 12), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position=c(.2, .85), legend.key.width=unit(10,"line"), legend.key.height = unit(3, "line")) + scale_x_continuous(breaks=c(1,2,3))
BQCVload2
# Summary of varroa load for experiment 2
VarSum2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting varroa load for experiment 2
VARload2 <- ggplot(data = VarSum2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees)") + coord_cartesian(ylim = c(0, 5), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none") + scale_x_continuous(breaks=c(1,2,3))
VARload2
# Summary of FOB for experiment 2
FOB2 <- ddply(MigStat, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 2
FOB3 <- ggplot(data = FOB2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(6, 30), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position="none") + scale_x_continuous(breaks=c(1,2,3))
FOB3
# experiment 1:
plot_grid(BQCVload1, DWVload1, VARload1, FOB1, labels = c("A", "B", "C", "D"), ncol = 2,align="hv")
# experiment 2:
plot_grid(BQCVload2, DWVload2, VARload2, FOB3, labels = c("A", "B", "C", "D"), ncol = 2,  align="hv", label_size = 30)
# LDA 1 and 2:
plot_grid(LDAone, LDAtwo, labels = c("A", "B"), align="hv",  label_size = 30)
# plotting BQCV VL for experiment 2
BQCVload2 <- ggplot(data = VirusSum8,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=8) + scale_colour_manual(values = c("darkgrey","black", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = NULL, y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(3, 12), xlim = c(1,2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=3) + theme_classic(base_size = 30) + theme(legend.position=c(.3, .85), legend.key.width=unit(10,"line"), legend.key.height = unit(3, "line")) + scale_x_continuous(breaks=c(1,2,3))
BQCVload2
# experiment 1:
plot_grid(BQCVload1, DWVload1, VARload1, FOB1, labels = c("A", "B", "C", "D"), ncol = 2,align="hv")
# experiment 2:
plot_grid(BQCVload2, DWVload2, VARload2, FOB3, labels = c("A", "B", "C", "D"), ncol = 2,  align="hv", label_size = 30)
# create seperate data frames for each time point:
MigStatSplit <- split(MigStat, MigStat$SamplingEvent)
Mig1 <- MigStatSplit$`1`
Mig2 <- MigStatSplit$`2`
Mig3 <- MigStatSplit$`3`
# run LDA
time2 <- lda(Treatment~Varroa + NosemaLoadRecount + logBQCV + logDWV + DWVbinary + FOB + BroodPattern + NosemaBinary + VarroaBinary, data=Mig2, na.action="na.omit")
# LDA prep function
ggplotLDAPrep <- function(x){
if (!is.null(Terms <- x$terms)) {
data <- model.frame(x)
X <- model.matrix(delete.response(Terms), data)
g <- model.response(data)
xint <- match("(Intercept)", colnames(X), nomatch = 0L)
if (xint > 0L)
X <- X[, -xint, drop = FALSE]
}
means <- colMeans(x$means)
X <- scale(X, center = means, scale = FALSE) %*% x$scaling
rtrn <- as.data.frame(cbind(X,labels=as.character(g)))
rtrn <- data.frame(X,labels=as.character(g))
return(rtrn)
}
# fit graph for LDA
fitGraph <- ggplotLDAPrep(time2)
# graph for LDA
LDAone <- ggplot(fitGraph, aes(LD1,LD2, color=labels))+geom_point(size=6) + theme_minimal(base_size = 30) + theme(legend.key.width = unit(3, "line"), legend.key.height = unit(3, "line"), legend.position = c(x=.82, y=.85), legend.background = element_rect(fill="white", size=.5), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid')) + stat_ellipse(show.legend = FALSE, level=.7) + labs(x="LD1 (88.36%)", y="LD2 (11.64%)") + scale_color_manual(values=c("black", "red", "blue"), name="Treatment",breaks=c("Exposed", "Migratory", "Stationary"), labels=c("Exposed", "Migratory", "Stationary\n(Isolated)"))
LDAone
# run LDA
time3 <- lda(Treatment~Varroa + NosemaLoadRecount + logBQCV + logDWV + DWVbinary + FOB + BroodPattern + NosemaBinary + VarroaBinary, data=Mig3, na.action="na.omit")
# graph for LDA
fitGraph1 <- ggplotLDAPrep(time3)
# graph for LDA
LDAtwo <- ggplot(fitGraph1, aes(LD1,LD2, color=labels))+geom_point(size=6) + theme_minimal(base_size = 30) + scale_colour_manual(values = c("black", "red","blue" )) + theme(legend.position= "none", axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid')) + stat_ellipse(show.legend = FALSE, level=.7) + labs(color="Treatment:", x="LD1 (68.73%)", y="LD2 (31.27%)")
LDAtwo
# experiment 1:
plot_grid(BQCVload1, DWVload1, VARload1, FOB1, labels = c("A", "B", "C", "D"), ncol = 2,align="hv")
# experiment 2:
plot_grid(BQCVload2, DWVload2, VARload2, FOB3, labels = c("A", "B", "C", "D"), ncol = 2,  align="hv", label_size = 30)
# LDA 1 and 2:
plot_grid(LDAone, LDAtwo, labels = c("A", "B"), align="hv",  label_size = 30)
