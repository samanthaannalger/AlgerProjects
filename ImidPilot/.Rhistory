geom_bar(stat="identity", color="black",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence") + geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd, width = 0.2),position=position_dodge(.9))
plot1 + theme_bw(base_size = 23) + scale_fill_manual(values=colors, name="Site Type:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 1)) + scale_y_continuous(labels = scales::percent) + annotate(geom = "text", x = 1, y = .98, label = "*",cex = 10) + annotate(geom = "text", x = 2, y = .25, label = "*",cex = 9)
###################################################################################################
######################## CREATING PUBLICATION GRAPHICS FOR PLANT PREV #############################
###################################################################################################
# create a binary varaible for apiary or no apiary
Plants$apiary <- ifelse(Plants$sumColonies1 <= 0, "no apiary","apiary")
Plants$HBlowHigh <- ifelse(Plants$apis <= 4, "Low HB","High HB")
colnames(BombSurvNHBS)
colnames(BombSurv)
BombSurv$HBSiteBin
head(BombSurv)
DWV <- subset(BombSurv, target_name=="DWV")
head(DWV)
table(DWV$HBSiteBin)
DWV$HBSiteBin
# P. Alexander Burnham
# 29, December 2016
# 17, May 2018
# Data Analysis (Figures and Stats)
#------------------------------------------------------------------------
# Preliminaries:
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/ImidPilot/")
# Read in Data:
ImidDF <- read.csv("csv_files/ImidDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
ConsumpDF <- read.csv("csv_files/ConsumpDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
EvapTrials <- read.table("csv_files/EvaporationTrial.csv",
header=TRUE,
sep = ",")
# load plyr for data manipulation and ggplot plotting package
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
library(lme4)
library(car)
# DATA ANALYSIS and Figures##########################
# Only include samples positive for viruses:
ImidDWV <- ImidDF[ which(ImidDF$DWVbinary=="1"), ]
ImidBQCV <- ImidDF[ which(ImidDF$BQCVbinary=="1"), ]
#Calculate the differences between the starting virus loads (taken directly from Koppert colonies) and the final virus loads, create new columns:
ImidBQCV$BQCVloadDif <- (ImidBQCV$BQCVload-ImidBQCV$PreBQCVLoad)
ImidBQCV$LogBQCVDif <- log(ImidBQCV$BQCVload/ImidBQCV$PreBQCVLoad)
ImidDWV$DWVloadDif <- (ImidDWV$DWVload-ImidDWV$PreDWVLoad)
ImidDWV$LogDWVDif <- log(ImidDWV$DWVload/ImidDWV$PreDWVLoad)
##############################################################
# figure for BQCV
#Change order of factors
ImidBQCV$Treatment <- factor(ImidBQCV$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# Figure of the log virus genome copies
BQCVPlot <- ggplot(ImidBQCV, aes(x=Treatment, y=logBQCV, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Log(BQCV titer)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("Control", "0.1","1","10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
BQCVPlot
# STATISTICS FOR BQCV:##############################################################
#checking for normality:
hist(ImidBQCV$BQCVload, data = ImidBQCV)
hist(ImidBQCV$logBQCV, data = ImidBQCV)
# ANOVA Using log transformed data to improve normality:
mod1 <- aov(logBQCV~Treatment, data = ImidBQCV)
summary(mod1)
TukeyHSD(mod1)
# Mixed Model for BQCV load:
BQCVMod <- lmer(logBQCV~Treatment + (1|colony), data=ImidBQCV)
summary(BQCVMod)
Anova(BQCVMod)
library("multcomp")
summary(glht(BQCVMod, mcp(Treatment="Tukey")))
############################################################
# figure for DWV load:
#Change order of factors
ImidDWV$Treatment <- factor(ImidDWV$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# Figure of the log virus genome copies
DWVPlot <- ggplot(ImidDWV, aes(x=Treatment, y=logDWV, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Log(DWV titer)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("Control","0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
DWVPlot
# STATISTICS FOR DWV:##############################################################
# Mixed model for DWV load:
DWVMod <- lmer(logDWV~Treatment + (1|colony), data=ImidDWV)
summary(DWVMod)
Anova(DWVMod)
summary(glht(DWVMod, mcp(Treatment="Tukey")))
##############################################################
##############################################################
##############################################################
# CONSUMPTION STATS
# Check for differences between evaporation rates of groups
Evap <- aov(evap~Treatment, data=EvapTrials)
summary(Evap)
# p = 0.46, no difference in amount of sucrose lost due to evaporation.
#############################################
# Time Series for Sucrose Consumption FIGURE:
# Remove two outliers- measuring error- values are more than the sucrose and vial can possibly weigh: sample_name: I-33, Treatment:20, time step 3: & sample I-4, Treatment: C, time step 2
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name=="I-33" & ConsumpDF$TimeStep==3),]
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name=="I-4" & ConsumpDF$TimeStep==2),]
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name==""),]
ConsumpDF<-ConsumpDF[!is.na(ConsumpDF$sample_name),]
ConsumpDF<-ConsumpDF[!is.na(ConsumpDF$Consumption_g),]
# reorder factors for plotting
ConsumpDF$Treatment <- factor(ConsumpDF$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# summary stats for plotting purposes:
ConsumpSummary <- ddply(ConsumpDF, c("Treatment", "TimeStep"), summarise,
n = length(Consumption_mL),
mean = mean(Consumption_mL, na.rm = TRUE),
sd = sd(Consumption_mL, na.rm = TRUE),
se = sd / sqrt(n))
#Create plot in ggplot
plot <- ggplot(data = ConsumpSummary,
aes(x = TimeStep,
y = mean,
group = Treatment,
colour = Treatment)
) + geom_line(size=1) + geom_point(size=3) + scale_colour_manual(values = c("dodgerblue4", "black", "darkgreen", "purple", "brown"), name = "Dose(ppb)", labels=c("Control","0.1", "1", "10","20")) + labs(x = "Time (days)", y = "Sucrose consumption/bee/day (mL)") + coord_cartesian(ylim = c(0, 0.5)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + theme_bw()
plot
# add a theme and add asterix for significance
#plot + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + annotate(geom = "text", x = 1, y = 0.37, label = "**",cex = 6) + annotate(geom = "text", x = 2, y = 0.5, label = "***",cex = 6) + annotate(geom = "text", x = 3, y = 0.41, label = "***",cex = 6) + annotate(geom = "text", x = 4, y = 0.45, label = "***",cex = 6) + annotate(geom = "text", x = 5, y = 0.4, label = "***",cex = 6)
# Repeated Measures ANOVA to look for differences between treatment groups:
ConsumpDF$TimeStep <- as.factor(ConsumpDF$TimeStep)
ConsumpDF$Treatment <- as.factor(ConsumpDF$Treatment)
mod <- glmer(data=ConsumpDF, Consumption_mL~Treatment*TimeStep + (1|Colony), family=Gamma)
Anova(mod)
mod <- lm(ConsumpDF$Consumption_mL~ConsumpDF$Treatment*ConsumpDF$TimeStep)
summary(mod)
summary(glht(mod, mcp(Treatment="Tukey")))
# Results:
# the 20 ppb is significantly different from the control, 1, 0.1 (p < 0.001) ; and 10 ppb is different from 0.1 (p=0.006)
################################################################ TOTAL Sucrose CONSUMED:
# Figure showing the total amount of sucrose consumed by treatment group, Did bees consume different amounts total?
#Only take one timestep bee to plot
ConsumpDF<-ConsumpDF[(ConsumpDF$TimeStep=="1"),]
# Plot figure showing the total amount of sucrose consumed by group (ng)
ConsumpDF$logImidConsumpTotal <- log(ConsumpDF$ImidConsumpTotal)
TotalImid <- ggplot(ConsumpDF, aes(x=Treatment, y=ImidConsumpTotal, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Total Imidacloprid Consumed (ng)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
TotalImid
################################################################ TOTAL IMID CONSUMED:
# Figure showing the total amount of Imid consumed by treatment group, Did bees consume different amounts of Imid?
#Only take one timestep bee to plot
ConsumpDF<-ConsumpDF[(ConsumpDF$TimeStep=="1"),]
#Remove Control group from dataset
ConsumpDF<-ConsumpDF[!(ConsumpDF$Treatment=="C"),]
ConsumpDF$Treatment <- as.character(ConsumpDF$Treatment)
ConsumpDF$Treatment <- as.factor(ConsumpDF$Treatment)
# Check distribution, data are gamma distribution
hist(ConsumpDF$ImidConsumpTotal)
# Plot figure showing the total amount of Imid consumed by group (ng)
ConsumpDF$logImidConsumpTotal <- log(ConsumpDF$ImidConsumpTotal)
TotalImid <- ggplot(ConsumpDF, aes(x=Treatment, y=ImidConsumpTotal, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Total Imidacloprid Consumed (ng)")+
theme_classic() +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
TotalImid
#Test for differences with ANOVA:
mod3 <- aov(ImidConsumpTotal~Treatment, data = ConsumpDF)
summary(mod3)
TukeyHSD(mod3)
# Mixed model for Imid Consumption, colony as a random effect:
ConsumpFull <- glm(ImidConsumpTotal~Treatment + Colony, data=ConsumpDF, family=Gamma(link="log"))
Anova(ConsumpFull)
summary(glht(ConsumpFull, mcp(Treatment="Tukey")))
#checking for normality:
hist(ImidBQCV$BQCVload, data = ImidBQCV)
hist(ImidBQCV$logBQCV, data = ImidBQCV)
# ANOVA Using log transformed data to improve normality:
mod1 <- aov(logBQCV~Treatment, data = ImidBQCV)
summary(mod1)
# Mixed Model for BQCV load:
BQCVMod <- lmer(logBQCV~Treatment + (1|colony), data=ImidBQCV)
summary(BQCVMod)
Anova(BQCVMod)
#checking for normality:
hist(ImidBQCV$BQCVload, data = ImidBQCV)
hist(ImidBQCV$logBQCV, data = ImidBQCV)
# Plant Transmission Experiment
# Samantha Alger
# April 24, 2018
# Clear memory of characters:
ls()
rm(list=ls())
#Set Working Directory:
setwd("~/AlgerProjects/PlantTransExp/CSV_Files")
# read in data:
plantTrans <- read.csv("plantTransPlantsDF.csv", header=TRUE, sep = ",", stringsAsFactors=FALSE)
virusLoad <- read.csv("datTransPos.csv", header=TRUE, sep = ",", stringsAsFactors=FALSE)
PlantVL <- read.csv ("CleanPlantVirus.csv", header= TRUE, sep = ",", stringsAsFactors=FALSE)
# read in data, (skip over meta data in csv file: skip = 9) :
VideoData <- read.csv("PlantTransVideoData.csv", header=TRUE, sep = ",", stringsAsFactors=FALSE, skip = 9)
PlantDF <- read.csv("plantTransPlantsDF.csv", header=TRUE, sep = ",", stringsAsFactors=FALSE)
VirusDetect <- read.csv("VirusDetectionPlants.csv", header=TRUE, sep = ",", stringsAsFactors=FALSE)
#Merge video data with the detection data:
VideoDataMerge <- merge(VideoData, VirusDetect, by=c("expID"), all.x=TRUE, all.y=TRUE)
library(plyr)
library(dplyr)
library(ggplot2)
library(lme4)
library(car)
# recode DF groups as control, treatment, pre-experiment
plantTrans$group[plantTrans$group == "C"] <- "Bombus Only"
plantTrans$group[plantTrans$group == "T"] <- "HB + Bombus"
plantTrans$group[plantTrans$group == "PRE"] <- "Pre Experiment"
# P12 is negative for DWV- bad meltcurve--- I manually deleted that row from the dataframe***
# Create table for forage time data
VidDat <- ddply(VideoDataMerge, c("expID"), summarise,
visits = length(expID),
foragetime = sum(Forage, na.rm=TRUE))
#merge new visitation data with the virus DF:
plantTrans <- merge(VidDat,plantTrans,by=c("expID"),all.y=TRUE)
# select columns from virus load DF and Merge with plantTrans DF:
virusLoad <- dplyr::select(virusLoad, labID, target_name, genomeCopy)
plantTrans <-merge(plantTrans, virusLoad, by=c("labID","target_name"), all.x=TRUE)
# Make all genome copyies 0 if Binyprefilter is 0, This is because the virus load data clean up did not take into account the duplicate/triplicate discrepancies...
plantTrans$genomeCopy <- ifelse(plantTrans$BINYprefilter == 0,0, plantTrans$genomeCopy)
# Add new column for 'experiment' type so that all 'comingle (1-3)' experiments are coded as 'comingle'
plantTrans$experiment <- ifelse(plantTrans$exp == "chronic-1"|plantTrans$exp =="chronic-2"| plantTrans$exp == "chronic-3", "chronic", plantTrans$exp)
# Plant Trans Exp_____________________
# using ddply to summarize data for treatment groups:
PlantVirusSum <- ddply(plantTrans, c("target_name", "group"), summarise,
n = length(BINYprefilter),
mean = mean(BINYprefilter, na.rm=TRUE),
sd = sd(BINYprefilter, na.rm=TRUE),
se = sd / sqrt(n))
#Re-ordering the DF for the graph
PlantVirusSum$group <- as.factor(PlantVirusSum$group)
PlantVirusSum$group <- factor(PlantVirusSum$group, levels=c("Pre Experiment", "Bombus Only", "HB + Bombus"))
#creating the figure
#choosing color pallet
colors <- c("olivedrab", "darkolivegreen2")
# aes: aesthetics
# geom_bar = type of graph
# stat="identity.....dodge())"  part of the code required to make grouped columns
plot1 <- ggplot(PlantVirusSum, aes(x=group, y=mean, fill=target_name)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x=NULL, y="% flowers with virus detected")
#adding additional aesthetics to the figure:
#name....labels...= for legend (if there is a fill)
#theme(legend.position)= puts legend on plot
#coord_cartesian= set axis limits in this case, 0-1 because prevalence
#scale y continuous..= labels as percent
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Virus", labels=c("BQCV", "DWV")) + theme(legend.position=c(.8, .9)) + coord_cartesian(ylim = c(0, 0.3)) + scale_y_continuous(labels = scales::percent)
#Creating figure for presentation Eagle Hill
# remove bombus only from the data frame
PlantVirusSumReduced <- PlantVirusSum[!(PlantVirusSum$group=="Bombus Only"), ]
# make the data frame a factor again to remove the level
# and rename levels
PlantVirusSumReduced$group <- factor(PlantVirusSumReduced$group)
levels(PlantVirusSumReduced$group) <- c("HB Foraged", "Pre Experiment")
plot1 <- ggplot(PlantVirusSumReduced, aes(x=group, y=mean, fill=target_name)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x=NULL, y="% plants with virus detected")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Virus", labels=c("BQCV", "DWV")) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 0.3)) + scale_y_continuous(labels = scales::percent)
#Checking out virus detected on all treatment plants by plant species (for all experiments)
#subset to only include plants part of the HB+Bombus group
plantTreat <- plantTrans[ which(plantTrans$group=="HB + Bombus"), ]
#Checking out by plant species
plantSpp <- ddply(plantTreat, c("target_name", "spp"), summarise,
n = length(BINYprefilter),
mean = mean(BINYprefilter, na.rm=TRUE),
sd = sd(BINYprefilter, na.rm=TRUE),
se = sd / sqrt(n))
plantSpp$spp[plantSpp$spp == "RC"] <- "Red Clover"
plantSpp$spp[plantSpp$spp == "BFT"] <- "BirdsFoot Trefoil"
plantSpp$spp[plantSpp$spp == "WC"] <- "White Clover"
#choosing color pallet
colors <- c("goldenrod", "violetred4", "snow1")
#Create a bar graph for viruses by plant species (aes= aesthetics):
plot1 <- ggplot(plantSpp, aes(x=target_name, y=mean, fill=spp)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) + labs(x="Virus", y = "% of Flowers with Virus Detected")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Plant Species:", labels=c(expression(italic("L. corniculatus"),italic("T. pretense"), italic("T. repens")))) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 1)) + scale_y_continuous(labels = scales::percent)
############################################
#Full Model:
ModDat <- plantTreat
##### MODEL WORKS!!!! and is legal!!!!
Fullmod3 <- glm(data=ModDat, BINYprefilter ~ spp * (target_name + experiment), family = binomial(link="logit"))
anova(Fullmod3, test="Chisq")
# P. Alexander Burnham
# 29, December 2016
# 17, May 2018
# Data Analysis (Figures and Stats)
#------------------------------------------------------------------------
# Preliminaries:
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/ImidPilot/")
# Read in Data:
ImidDF <- read.csv("csv_files/ImidDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
ConsumpDF <- read.csv("csv_files/ConsumpDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
EvapTrials <- read.table("csv_files/EvaporationTrial.csv",
header=TRUE,
sep = ",")
# load plyr for data manipulation and ggplot plotting package
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
library(lme4)
library(car)
# DATA ANALYSIS and Figures##########################
# Only include samples positive for viruses:
ImidDWV <- ImidDF[ which(ImidDF$DWVbinary=="1"), ]
ImidBQCV <- ImidDF[ which(ImidDF$BQCVbinary=="1"), ]
#Calculate the differences between the starting virus loads (taken directly from Koppert colonies) and the final virus loads, create new columns:
ImidBQCV$BQCVloadDif <- (ImidBQCV$BQCVload-ImidBQCV$PreBQCVLoad)
ImidBQCV$LogBQCVDif <- log(ImidBQCV$BQCVload/ImidBQCV$PreBQCVLoad)
ImidDWV$DWVloadDif <- (ImidDWV$DWVload-ImidDWV$PreDWVLoad)
ImidDWV$LogDWVDif <- log(ImidDWV$DWVload/ImidDWV$PreDWVLoad)
##############################################################
# figure for BQCV
#Change order of factors
ImidBQCV$Treatment <- factor(ImidBQCV$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# Figure of the log virus genome copies
BQCVPlot <- ggplot(ImidBQCV, aes(x=Treatment, y=logBQCV, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Log(BQCV titer)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("Control", "0.1","1","10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
BQCVPlot
# STATISTICS FOR BQCV:##############################################################
#checking for normality:
hist(ImidBQCV$BQCVload, data = ImidBQCV)
hist(ImidBQCV$logBQCV, data = ImidBQCV)
# ANOVA Using log transformed data to improve normality:
mod1 <- aov(logBQCV~Treatment, data = ImidBQCV)
summary(mod1)
TukeyHSD(mod1)
# Mixed Model for BQCV load:
BQCVMod <- lmer(logBQCV~Treatment + (1|colony), data=ImidBQCV)
summary(BQCVMod)
Anova(BQCVMod)
library("multcomp")
summary(glht(BQCVMod, mcp(Treatment="Tukey")))
############################################################
# figure for DWV load:
#Change order of factors
ImidDWV$Treatment <- factor(ImidDWV$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# Figure of the log virus genome copies
DWVPlot <- ggplot(ImidDWV, aes(x=Treatment, y=logDWV, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Log(DWV titer)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("Control","0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
DWVPlot
# STATISTICS FOR DWV:##############################################################
# Mixed model for DWV load:
DWVMod <- lmer(logDWV~Treatment + (1|colony), data=ImidDWV)
summary(DWVMod)
Anova(DWVMod)
summary(glht(DWVMod, mcp(Treatment="Tukey")))
##############################################################
##############################################################
##############################################################
# CONSUMPTION STATS
# Check for differences between evaporation rates of groups
Evap <- aov(evap~Treatment, data=EvapTrials)
summary(Evap)
# p = 0.46, no difference in amount of sucrose lost due to evaporation.
#############################################
# Time Series for Sucrose Consumption FIGURE:
# Remove two outliers- measuring error- values are more than the sucrose and vial can possibly weigh: sample_name: I-33, Treatment:20, time step 3: & sample I-4, Treatment: C, time step 2
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name=="I-33" & ConsumpDF$TimeStep==3),]
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name=="I-4" & ConsumpDF$TimeStep==2),]
ConsumpDF<-ConsumpDF[!(ConsumpDF$sample_name==""),]
ConsumpDF<-ConsumpDF[!is.na(ConsumpDF$sample_name),]
ConsumpDF<-ConsumpDF[!is.na(ConsumpDF$Consumption_g),]
# reorder factors for plotting
ConsumpDF$Treatment <- factor(ConsumpDF$Treatment, levels = c("C", "0.1", "1", "10", "20"))
# summary stats for plotting purposes:
ConsumpSummary <- ddply(ConsumpDF, c("Treatment", "TimeStep"), summarise,
n = length(Consumption_mL),
mean = mean(Consumption_mL, na.rm = TRUE),
sd = sd(Consumption_mL, na.rm = TRUE),
se = sd / sqrt(n))
#Create plot in ggplot
plot <- ggplot(data = ConsumpSummary,
aes(x = TimeStep,
y = mean,
group = Treatment,
colour = Treatment)
) + geom_line(size=1) + geom_point(size=3) + scale_colour_manual(values = c("dodgerblue4", "black", "darkgreen", "purple", "brown"), name = "Dose(ppb)", labels=c("Control","0.1", "1", "10","20")) + labs(x = "Time (days)", y = "Sucrose consumption/bee/day (mL)") + coord_cartesian(ylim = c(0, 0.5)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.1)) + theme_bw()
plot
# add a theme and add asterix for significance
#plot + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + annotate(geom = "text", x = 1, y = 0.37, label = "**",cex = 6) + annotate(geom = "text", x = 2, y = 0.5, label = "***",cex = 6) + annotate(geom = "text", x = 3, y = 0.41, label = "***",cex = 6) + annotate(geom = "text", x = 4, y = 0.45, label = "***",cex = 6) + annotate(geom = "text", x = 5, y = 0.4, label = "***",cex = 6)
# Repeated Measures ANOVA to look for differences between treatment groups:
ConsumpDF$TimeStep <- as.factor(ConsumpDF$TimeStep)
ConsumpDF$Treatment <- as.factor(ConsumpDF$Treatment)
mod <- glmer(data=ConsumpDF, Consumption_mL~Treatment*TimeStep + (1|Colony), family=Gamma)
Anova(mod)
mod <- lm(ConsumpDF$Consumption_mL~ConsumpDF$Treatment*ConsumpDF$TimeStep)
summary(mod)
summary(glht(mod, mcp(Treatment="Tukey")))
# Results:
# the 20 ppb is significantly different from the control, 1, 0.1 (p < 0.001) ; and 10 ppb is different from 0.1 (p=0.006)
################################################################ TOTAL Sucrose CONSUMED:
# Figure showing the total amount of sucrose consumed by treatment group, Did bees consume different amounts total?
#Only take one timestep bee to plot
ConsumpDF<-ConsumpDF[(ConsumpDF$TimeStep=="1"),]
# Plot figure showing the total amount of sucrose consumed by group (ng)
ConsumpDF$logImidConsumpTotal <- log(ConsumpDF$ImidConsumpTotal)
TotalImid <- ggplot(ConsumpDF, aes(x=Treatment, y=ImidConsumpTotal, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Total Imidacloprid Consumed (ng)")+
theme_classic(base_size = 17) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
TotalImid
################################################################ TOTAL IMID CONSUMED:
# Figure showing the total amount of Imid consumed by treatment group, Did bees consume different amounts of Imid?
#Only take one timestep bee to plot
ConsumpDF<-ConsumpDF[(ConsumpDF$TimeStep=="1"),]
#Remove Control group from dataset
ConsumpDF<-ConsumpDF[!(ConsumpDF$Treatment=="C"),]
ConsumpDF$Treatment <- as.character(ConsumpDF$Treatment)
ConsumpDF$Treatment <- as.factor(ConsumpDF$Treatment)
# Check distribution, data are gamma distribution
hist(ConsumpDF$ImidConsumpTotal)
# Plot figure showing the total amount of Imid consumed by group (ng)
ConsumpDF$logImidConsumpTotal <- log(ConsumpDF$ImidConsumpTotal)
TotalImid <- ggplot(ConsumpDF, aes(x=Treatment, y=ImidConsumpTotal, fill=Treatment)) +
labs(x="Dose (ppb)", y = "Total Imidacloprid Consumed (ng)")+
theme_classic() +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) + scale_x_discrete(labels=c("0.1","1", "10","20")) + scale_fill_grey(start = 1, end = .4, guide=FALSE)
TotalImid
#Test for differences with ANOVA:
mod3 <- aov(ImidConsumpTotal~Treatment, data = ConsumpDF)
summary(mod3)
TukeyHSD(mod3)
# Mixed model for Imid Consumption, colony as a random effect:
ConsumpFull <- glm(ImidConsumpTotal~Treatment + Colony, data=ConsumpDF, family=Gamma(link="log"))
Anova(ConsumpFull)
summary(glht(ConsumpFull, mcp(Treatment="Tukey")))
########################################################
#SURVIVAL ANALYSIS
########################################################
########################################################
# Read in Data:
BeeMort <- read.csv("csv_files/SurvivDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#install.packages("survival")
# Loading the package
library("survival")
#Fitting the survival model
mod <- survdiff(Surv(time, status) ~ Treatment, data=BeeMort, rho = 0)
mod
#Creating the survival curve:
survival_func=survfit(Surv(BeeMort$time,BeeMort$status)~BeeMort$Treatment)
plot(survival_func, ylab="Survival", xlab="Days", col=c("red", "blue", "green", "black", "purple"))
legend(.6, .6, legend=c("0.1", "1", "10","20","Control"), title = "Dose (ppb)",
col=c("red", "blue", "green", "black", "purple"), lty=1, cex=0.8)
#Creating the survival curve:
survival_func=survfit(Surv(BeeMort$time,BeeMort$status)~BeeMort$Treatment)
survival_func
# Read in Data:
BeeMort <- read.csv("csv_files/SurvivDF.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#install.packages("survival")
# Loading the package
library("survival")
#Fitting the survival model
mod <- survdiff(Surv(time, status) ~ Treatment, data=BeeMort, rho = 0)
mod
#Creating the survival curve:
survival_func=survfit(Surv(BeeMort$time,BeeMort$status)~BeeMort$Treatment)
print(survival_func)
summary(survival_func)
head(BeeMort)
#Fitting the survival model
mod <- survdiff(Surv(time, status) ~ Treatment, data=BeeMort)
print(mod)
#Fitting the survival model
mod <- survdiff(Surv(time, status) ~ Treatment, data=BeeMort, rho = 0)
print(mod)
#Creating the survival curve:
survival_func=survfit(Surv(time,status)~Treatment, data = BeeMort)
print(survival_func)
head(BeeMort)
BeeMort
survival_func)
survival_func
