```{r,  echo=FALSE}
BombSurvSplit <- split(BombSurv, BombSurv$target_name)
HBSiteSum <- ddply(BombSurvSplit$DWV, c("HBSiteBin", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
colors <- c("slategray3", "dodgerblue4", "blue4")
barplot(height=HBSiteSum$mean,
names.arg = c("High DWV Load",
"Low DWV Load",
"No Apis Caught"),
xlab="Site Type",
ylab ="% Prevalence (Bombus with DWV)",
ylim = c(0,0.2),
main = "Bombus DWV Prevalence by Honey Bee DWV Load",
col = colors
)
```
**Figure 3:** Percent prevalance for Bumble bees infected with deformed wing virus at sites where honey bees had high and low viral loads, and sites where no honey bees were present and therefore could not be collected. DWV was more prevalent in bumble bees caught at sites with honey bees with high average viral loads, than sites with honey bees with low average viral loads (p = 0.046, X2 = 3.9767).
```{r,  echo=FALSE, results=FALSE}
#remove NA rows from dataframe
BombSurvSplit <- BombSurvSplit$DWV[which(BombSurvSplit$DWV$HBSiteBin!="NA"),]
# chi.sq test for High and Low DWV load sites
chisq.test(BombSurvSplit$HBSiteBin, BombSurvSplit$virusBINY)
```
```{r,  echo=FALSE}
```
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- dplyr::select(BombSurv, -City, -Name, -virusBINY_PreFilter)
# remove unwanted sites and bombus species
BombSurv<-BombSurv[!BombSurv$site==("PITH"),]
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.table("BombSurv.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# read in data
BombSurv <- read.table("BombSurv.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- dplyr::select(BombSurv, -City, -Name, -virusBINY_PreFilter)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
BombSurv <- read.table("BombSurvNHBS.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.table("BombSurv.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.table("BombSurv.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# read in data
BombSurv <- read.csv("BombSurv.csv", header=TRUE, stringsAsFactors=FALSE)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.csv("BombSurv.csv", header=TRUE, stringsAsFactors=FALSE)
getRversion()
library(knitr)
update.packages("knitr")
knitr::all_labels()
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.csv("BombSurv.csv", header=TRUE, stringsAsFactors=FALSE)
# read in data
BombSurv <- read.table("BombSurv.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
BombSurv
str(BombSruc)
str(BombSruv)
str(BombSurv)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.table("BombSurv.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- dplyr::select(BombSurv, -City, -Name, -virusBINY_PreFilter)
BombSurv$City
# remove unneeded columns from the DF
BombSurv <- dplyr::select(BombSurv, -Name, -virusBINY_PreFilter)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee)
str(BombSurv)
# remove unwanted sites and bombus species
BombSurv<-BombSurv[!BombSurv$site==("PITH"),]
BombSurv<-BombSurv[!BombSurv$site==("STOW"),]
BombSurv<-BombSurv[!BombSurv$species==("Griseocollis"),]
BombSurv<-BombSurv[!BombSurv$species==("Sandersonii"),]
# using ddply to get summary of virusBINY by species and target name:
VirusSum <- ddply(BombSurv, c("target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("dodgerblue4", "dodgerblue4", "dodgerblue4")
#Create a bar graph for viruses by bombus species (aes= aesthetics):
plot1 <- ggplot(VirusSum, aes(x=target_name, y=mean, fill=target_name)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3)) + coord_cartesian(ylim = c(0, 1)) + scale_fill_manual(values=colors) + scale_y_continuous(labels = scales::percent)
# using ddply to get summary of virusBINY by species and target name:
VirusSum <- ddply(BombSurv, c("species", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("steelblue", "tan3")
#Create a bar graph for viruses by bombus species (aes= aesthetics):
plot1 <- ggplot(VirusSum, aes(x=target_name, y=mean, fill=species)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Bombus Species:", labels=c("bimaculatus", "vagans")) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 1)) + scale_y_continuous(labels = scales::percent)
head(BombSurv)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
# read in data
BombSurv <- read.table("BombSurv.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee)
# remove unwanted sites and bombus species
BombSurv<-BombSurv[!BombSurv$site==("PITH"),]
BombSurv<-BombSurv[!BombSurv$site==("STOW"),]
BombSurv<-BombSurv[!BombSurv$species==("Griseocollis"),]
BombSurv<-BombSurv[!BombSurv$species==("Sandersonii"),]
BombSurv<-BombSurv[!BombSurv$site==("EFAIR"),]
table(BombSurv$site)
table(BombSurv$sample_name)
table(BombSurv$target_name)
table(BombSurv$sample_name$target_name)
#sam is making a dataframe to figure out which samples are problematic:
Sammy<-table(BombSurv$sample_name)
sammyscounts <-data.frame(Sammy)
head(sammyscounts)
sammy_is_so_smart <- sammyscounts[which(sammyscounts$Freq!=4),]
# rename column names! Never forget this one!
colnames(sammy_is_so_smart)<- c("ID","Freq")
View(sammy_is_so_smart)
#sam is making a dataframe to figure out which samples are problematic:
Sammy<-table(BombSurv$sample_name)
sammyscounts <-data.frame(Sammy)
head(sammyscounts)
sammy_is_so_smart <- sammyscounts[which(sammyscounts$Freq=4),]
sammy_is_so_smart <- sammyscounts[which(sammyscounts$Freq!>4),]
sammy_is_so_smart <- sammyscounts[which(sammyscounts$Freq!=3),]
sammy_is_so_smart
# rename column names! Never forget this one!
colnames(sammy_is_so_smart)<- c("ID","Freq")
View(sammy_is_so_smart)
View(sammy_is_so_smart)
View(sammy_is_so_smart)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- dplyr::select(BombSurv, -City, -Name, -virusBINY_PreFilter)
# remove unwanted sites and bombus species
BombSurv<-BombSurv[!BombSurv$site==("PITH"),]
BombSurv<-BombSurv[!BombSurv$site==("STOW"),]
BombSurv<-BombSurv[!BombSurv$site==("EFAIR"),]
BombSurv<-BombSurv[!BombSurv$species==("Griseocollis"),]
BombSurv<-BombSurv[!BombSurv$species==("Sandersonii"),]
#sam is making a dataframe to figure out which samples are problematic:
Sammy<-table(BombSurv$sample_name)
sammyscounts <-data.frame(Sammy)
head(sammyscounts)
sammy_is_so_smart <- sammyscounts[which(sammyscounts$Freq!=3),]
sammy_is_so_smart
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee)
#sam is making a dataframe to figure out which samples are problematic:
Sammy<-table(BombSurv$sample_name)
sammyscounts <-data.frame(Sammy)
head(sammyscounts)
#sam is making a dataframe to figure out which samples are problematic:
Sammy<-table(BombSurv$sample_name)
Sammy
table(BombSurv$sample_name)
table(BombSurv$sample_name)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
head(BombSurv)
tabl(BombSurv$sample_name)
table(BombSurv$sample_name)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.csv("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
table(BombSurv$sample_name)
table(BombSurv$sample_name)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.csv("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
table(BombSurv$sample_name)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee)
head(BombSurv)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee, -siteNotes,virusBINY_PreFilter,-City, -Name)
head(BombSurv)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call blue color palette for graphics
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
# Set Working Directory
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.csv("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# remove unneeded columns from the DF
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee, -siteNotes, -virusBINY_PreFilter,-City, -Name)
head(BombSurv)
# remove unwanted sites and bombus species
BombSurv<-BombSurv[!BombSurv$site==("PITH"),]
BombSurv<-BombSurv[!BombSurv$site==("STOW"),]
BombSurv<-BombSurv[!BombSurv$site==("EFAIR"),]
BombSurv<-BombSurv[!BombSurv$species==("Griseocollis"),]
BombSurv<-BombSurv[!BombSurv$species==("Sandersonii"),]
table(BombSurv$site)
table(BombSurv$species)
table(BombSurv$species, BombSurv$site)
table(BombSurv$species, BombSurv$site, BombSurv$apiary_near_far)
# using ddply to get summary of virusBINY by species and target name:
VirusSum <- ddply(BombSurv, c("target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("dodgerblue4", "dodgerblue4", "dodgerblue4")
#Create a bar graph for viruses by bombus species (aes= aesthetics):
plot1 <- ggplot(VirusSum, aes(x=target_name, y=mean, fill=target_name)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3)) + coord_cartesian(ylim = c(0, 1)) + scale_fill_manual(values=colors) + scale_y_continuous(labels = scales::percent)
# using ddply to get summary of virusBINY by species and target name:
VirusSum <- ddply(BombSurv, c("species", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("steelblue", "tan3")
#Create a bar graph for viruses by bombus species (aes= aesthetics):
plot1 <- ggplot(VirusSum, aes(x=target_name, y=mean, fill=species)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Bombus Species:", labels=c("bimaculatus", "vagans")) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 1)) + scale_y_continuous(labels = scales::percent)
#stats for % prevalence, species differences
statsplit <- split(BombSurv, BombSurv$target_name)
# chi.sq test for BQCV prev. vs species (p < 0.00001)
chisq.test(statsplit$BQCV$virusBINY, statsplit$BQCV$species)
fisher.test(statsplit$BQCV$virusBINY, statsplit$BQCV$species)
# chi.sq test for DWV prev. vs species (p = 0.9469)
chisq.test(statsplit$DWV$virusBINY, statsplit$DWV$species)
# chi.sq test for DWV prev. vs species (p = 0.9469)
chisq.test(statsplit$DWV$virusBINY, statsplit$DWV$species)
# make apiary binary a character so we can use it as a factor in the model
BombSurv$apiary_near_far <- as.character(BombSurv$apiary_near_far)
# using ddply to get summary of virusBINY by species and target name:
VirusSum1 <- ddply(BombSurv, c("apiary_near_far", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
#choosing color pallet
colors <- c("slategray3", "dodgerblue4")
#Create a bar graph for viruses by bombus species (aes= aesthetics):
plot1 <- ggplot(VirusSum1, aes(x=target_name, y=mean, fill=apiary_near_far)) +
geom_bar(stat="identity",
position=position_dodge()) + labs(x="Virus", y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors, name="Site Type:", labels=c("Apiary Absent", "Apiary Present")) + theme(legend.position=c(.8, .85)) + coord_cartesian(ylim = c(0, 1)) + scale_y_continuous(labels = scales::percent)
#stats for % prevalence, apiary_near_far differences
#remove NAs before doing test
PresAbst_stat <- BombSurv[which(BombSurv$apiary_near_far!="NA"),]
PresAbst_stat <- split(PresAbst_stat, PresAbst_stat$target_name)
# chi.sq test for BQCV prev. vs apiary_near_far (p < 0.00001)
chisq.test(PresAbst_stat$BQCV$virusBINY, PresAbst_stat$BQCV$apiary_near_far)
# chi.sq test for DWV prev. vs apiary_near_far (p =  0.001814)
chisq.test(PresAbst_stat$DWV$virusBINY, PresAbst_stat$DWV$apiary_near_far)
# summary of viral load for by target and site
CopDist <- ddply(BombSurv, c("target_name", "site"), summarise,
n = length(norm_genome_copbeeHB),
mean = mean(norm_genome_copbeeHB, na.rm=TRUE),
sd = sd(norm_genome_copbeeHB, na.rm=TRUE),
se = sd / sqrt(n))
CopDist<-CopDist[!CopDist$target_name==("BQCV"),]
CopDist<-CopDist[!CopDist$target_name==("IAPV"),]
# histogram of log mean viral for DWV  at each site showing bimodality for site:
hist(log(CopDist$mean),
breaks=20,
xlim = c(5,25),
col = "dodgerblue4",
xlab = "Honeybee DWV level log(viral load)",
main = "Distribution of DWV Viral Load in Honeybees",
cex.lab = 1.3,
font.lab = 2
)
BombSurvSplit <- split(BombSurv, BombSurv$target_name)
BombSurvSplit$DWV$HBSiteBin[is.na(BombSurvSplit$DWV$HBSiteBin)] <- "No Apis Caught"
HBSiteSum <- ddply(BombSurvSplit$DWV, c("HBSiteBin", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
colors <- c("slategray3", "dodgerblue4", "blue4")
plot1 <- ggplot(HBSiteSum, aes(x=HBSiteBin, y=mean, fill=colors)) +
geom_bar(stat="identity") + labs(x=NULL, y = "% Prevalence")
plot1 + theme_minimal(base_size = 17) + scale_fill_manual(values=colors) + coord_cartesian(ylim = c(0, 0.2)) + scale_y_continuous(labels = scales::percent) + theme(legend.position=c(3, 3))
x <- BombSurvSplit$DWV[BombSurvSplit$DWV$HBSiteBin!="No Apis Caught",]
# loooking at diffence between high and low
chisq.test(x$HBSiteBin, x$virusBINY)
# chi.sq test for High and Low DWV load sites
chisq.test(BombSurvSplit$DWV$HBSiteBin, BombSurvSplit$DWV$virusBINY)
fisher.test(BombSurvSplit$DWV$HBSiteBin, BombSurvSplit$DWV$virusBINY)
# Figure to see differences in virus prevalence over time
BombSurv$Date_collected <- as.Date(BombSurv$Date_collected, "%m/%d/%y")
tempsplit <- split(BombSurv, BombSurv$target_name)
BombSurv$Date_Pooled <- ifelse(BombSurv$Date_collected >= "2015-08-03", "August", ifelse(BombSurv$Date_collected >= "2015-07-28", "July", ifelse(BombSurv$Date_collected >= "2015-07-16", "July", "June")))
BombSurv$Date_Pooled <- factor(BombSurv$Date_Pooled, levels = c("June", "July", "August"))
library(dplyr)
sp <- split(BombSurv, BombSurv$species)
# create summary and sd and se using plyr
library(plyr)
VirusSum2 <- ddply(sp$Bimaculatus, c("target_name", "Date_Pooled"), summarise,
n = length(virusBINY),
mean = mean(virusBINY),
sd = sd(virusBINY),
se = sd / sqrt(n))
VirusSum2 <- VirusSum2[-(7:9),]
library(ggplot2)
#Create plot in ggplot
plot <- ggplot(data = VirusSum2,
aes(x = Date_Pooled,
y = mean,
group = target_name,
colour = target_name)
) + geom_line(size=1.5) + geom_point(size=4) + scale_colour_manual(values = c("dodgerblue4", "black")) + coord_cartesian(ylim = c(0, 1)) + labs(x = "Month", y = "% Prevalence", color="Virus:") + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.2)) + scale_y_continuous(labels = scales::percent)
# add a theme and add asterix for significance
plot + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(.85, .85)) + coord_cartesian(ylim = c(0, 1))
mod <- glm(tempsplit$BQCV$virusBINY~tempsplit$BQCV$Date_collected)
summary(mod)
table(BombSurv$site,BombSurv$species)
