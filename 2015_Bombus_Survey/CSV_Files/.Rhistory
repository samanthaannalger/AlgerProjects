#-----------------------------------------------------------------------------------
# looking at a scenario that benefits fitness at the population level:
# order lowest litter to highes and remove the lowest
PopBenVar <- LionDF[order(LionDF$NumCubs),]
PopBenVar <- PopBenVar[-1,]
# find mean number of litter size
AvgPBV <- mean(PopBenVar$NumCubs)
# litter size of indvidual PBV lion:
PBV_litter_size <- AvgPBV
# find mean including behavioral lions offspring
TotalAVG_PBV <- mean(c(PopBenVar$NumCubs, PBV_litter_size))
# finding relitive fitness for this behavioral trait
PBV_Rel_Fit <- PBV_litter_size/TotalAVG_PBV
# relitive fitness is equal to 1 (it is NOT adaptive in this environment)
PBV_Rel_Fit
#-----------------------------------------------------------------------------------
# looking at a scenario that benefits an indivuals fitness:
# choosing a random ineger between 1 and 20 and removing it from the population:
set.seed(276)
IDcubskilled <- as.integer(runif(n=1, min=1, max=20))
IndvBenVar <- LionDF[-IDcubskilled,]
# find mean number of litter size
AvgIBV <- mean(IndvBenVar$NumCubs)
# litter size of Indiviual IBV lion:
IBV_litter_size <- AvgIBV + 2
# find mean including behavioral lions offspring
TotalAVG_IBV <- mean(c(IndvBenVar$NumCubs, IBV_litter_size))
# finding relitive fitness for this behavioral trait
IBV_Rel_Fit <- IBV_litter_size/TotalAVG_IBV
# relitive fitness is greater than 1 (it is adaptive and performs well in this environment)
IBV_Rel_Fit
LionID <- seq(1,20)
NumCubs <- c(4,7,3,8,2,6,4,9,3,3,6,4,7,5,5,6,1,9,12,8)
LionDF <- data.frame(LionID,NumCubs)
print(LionDF)
#-----------------------------------------------------------------------------------
# looking at a scenario that benefits fitness at the population level:
# order lowest litter size to highest and remove the lowest one
PopBenVar <- LionDF[order(LionDF$NumCubs),]
PopBenVar <- PopBenVar[-1,]
# find mean number of litter size
AvgPBV <- mean(PopBenVar$NumCubs)
# litter size of indvidual PBV lion:
Indv_PBV_litter <- AvgPBV
# find mean litter size including PBV lion's offspring
AVG_PBV_litter <- mean(c(PopBenVar$NumCubs, Indv_PBV_litter))
# finding relitive fitness for this behavioral trait
PBV_Rel_Fit <- Indv_PBV_litter/AVG_PBV_litter
# relitive fitness is equal to 1 (it is NOT adaptive in this environment)
PBV_Rel_Fit
#-----------------------------------------------------------------------------------
# looking at a scenario that benefits an indivuals fitness:
# choosing a random ineger between 1 and 20 and removing it from the population:
set.seed(276)
IDcubskilled <- as.integer(runif(n=1, min=1, max=20))
IndvBenVar <- LionDF[-IDcubskilled,]
# find mean number of litter size
AvgIBV <- mean(IndvBenVar$NumCubs)
# litter size of Indiviual IBV lion:
Indv_IBV_litter <- AvgIBV + 2
# find mean including behavioral lions offspring
AVG_IBV_litter <- mean(c(IndvBenVar$NumCubs, Indv_IBV_litter))
# finding relitive fitness for this behavioral trait
IBV_Rel_Fit <- Indv_IBV_litter/AVG_IBV_litter
# relitive fitness is greater than 1 (it is adaptive and performs well in this environment)
IBV_Rel_Fit
LionID <- seq(1,20)
NumCubs <- c(4,7,3,8,2,6,4,9,3,3,6,4,7,5,5,6,1,9,12,8)
LionDF <- data.frame(LionID,NumCubs)
print(LionDF)
#-----------------------------------------------------------------------------------
# looking at a scenario of species-benefit variant (SBV):
# order lowest litter size to highest and remove the lowest one
SpBenVar <- LionDF[order(LionDF$NumCubs),]
SpBenVar <- SpBenVar[-1,]
# find mean number of litter size
AvgSBV <- mean(SpBenVar$NumCubs)
# litter size of indvidual PBV lion:
Indv_SBV_litter <- AvgSBV
# find mean litter size including PBV lion's offspring
AVG_SBV_litter <- mean(c(SpBenVar$NumCubs, Indv_SBV_litter))
# finding relitive fitness for this behavioral trait
SBV_Rel_Fit <- Indv_SBV_litter/AVG_SBV_litter
# relitive fitness is equal to 1 (it is NOT adaptive in this environment)
SBV_Rel_Fit
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69  )
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69  )
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55 )
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
plot(LowHearingIC, HighHearingIC)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
# plot low hearing by high hearing:
plot(x=LowHearingIC, y=HighHearingIC,
#xlim=c(0, 0.55),
#ylim=c(0, 14),
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
grid(col="gray")
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# plot low hearing by high hearing:
plot(x=LowHearingIC, y=HighHearingIC,
#xlim=c(0, 0.55),
#ylim=c(0, 14),
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
grid(col="gray")
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(HighHearingIC~LowHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
z <- summary(LineBF)
Sum1 <- summary(LineBF)
Sum1
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
HighHearingIC <- HighHearingIC * (-1)
# plot low hearing by high hearing:
plot(x=LowHearingIC, y=HighHearingIC,
#xlim=c(0, 0.55),
#ylim=c(0, 14),
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
grid(col="gray")
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(HighHearingIC~LowHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(-33.95, -4, -50.5, -49.59, -0.5, -15, -10.25, -10.89, -16.55)
# plot low hearing by high hearing:
plot(x=LowHearingIC, y=HighHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
grid(col="gray")
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(HighHearingIC~LowHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
Sum1
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(-33.95, -4, -50.5, -49.59, -0.5, -15, -10.25, -10.89, -16.55)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
#ylab="Low Hearing (independant contrast)",
#xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(HighHearingIC~LowHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
HighHearingIC <- c(-33.95, -4, -50.5, -49.59, -0.5, -15, -10.25, -10.89, -16.55)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
#ylab="Low Hearing (independant contrast)",
#xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
```
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(-11.74, -2.5, -13.75, -8.83, -5.5, -9, -2.75, -7.62, -5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
#ylab="Low Hearing (independant contrast)",
#xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
Sum1
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(-11.74, -2.5, -13.75, -8.83, -5.5, -9, -2.75, -7.62, -5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, 5.25, 24.5, 7.37, 25.31, 4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF2)
```{r}
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, 5.25, 24.5, 7.37, 25.31, 4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF2)
Sum1
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(-39.01, -5, -51.5, -52.48, -5.25, -24.5, -7.37, -25.31, -4.78)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation:
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum1 <- summary(LineBF2)
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.568
Sum1 <- summary(LineBF)
Sum1
```{r}
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
IsolationCallIC <- c(-1.49, 2.5, 15.25, 14.51, 8, 10, -6, -9, 4.12)
# plot low hearing by isolation call:
plot(x=LowHearingIC, y=IsolationCallIC,
font.lab=2,
pch=19,
ylab="Isolation Call (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Isolation Call IC by Low Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF3 <- lm(IsolationCallIC~LowHearingIC)
line<-abline(LineBF3, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum2 <- summary(LineBF3)
Sum2
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, -5.25, 24.5, 7.37, 25.31, 4.78)
# plot Echo Location by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.84
Sum2 <- summary(LineBF2)
Sum2
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.536
Sum1 <- summary(Li
```{r}
HighHearingIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
EchoLocIC <- c(39.01, 5, 51.5, 52.48, -5.25, 24.5, 7.37, 25.31, 4.78)
# plot Echo Location by high hearing:
plot(x=HighHearingIC, y=EchoLocIC,
font.lab=2,
pch=19,
ylab="Echo Location (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Echo Location IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF2 <- lm(EchoLocIC~HighHearingIC)
line<-abline(LineBF2, col = "blue", lwd=3)
# summary of model R-square = 0.848
Sum2 <- summary(LineBF2)
```{r}
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, 5.5, 9, 2.75, 7.62, 5.69)
IsolationCallIC <- c(-1.49, 2.5, 15.25, 14.51, 8, 10, -6, -9, 4.12)
# plot low hearing by isolation call:
plot(x=LowHearingIC, y=IsolationCallIC,
font.lab=2,
pch=19,
ylab="Isolation Call (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Isolation Call IC by Low Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF3 <- lm(IsolationCallIC~LowHearingIC)
line<-abline(LineBF3, col = "blue", lwd=3)
# summary of model R-square = 0.078
Sum3 <- summary(LineBF3)
$$/frac{E_l}{h_l}$$
$$ \[\frac{E_l}{h_l}\] $$
ringIC <- c(33.95, 4, 50.5, 49.59, 0.5, 15, 10.25, 10.89, 16.55)
LowHearingIC <- c(11.74, 2.5, 13.75, 8.83, -5.5, 9, -2.75, -7.62, 5.69)
# plot low hearing by high hearing:
plot(x=HighHearingIC, y=LowHearingIC,
font.lab=2,
pch=19,
ylab="Low Hearing (independant contrast)",
xlab="High Hearing (independant contrast)",
main=paste("Low Hearing IC by High Hearing IC"))
# fit these data to a linear model and plot line of best fit (generate equation):
LineBF <- lm(LowHearingIC~HighHearingIC)
line<-abline(LineBF, col = "blue", lwd=3)
# summary of model R-square = 0.536
Sum1 <- summary(LineBF)
```
print(Sum1)
num <- c(7, 3, 6, 4, 7, 3, 3, 5, 9, 11, 7, 6, 5, 4, 4)
num
mean(num)
sd(num)
install.packages("knitr")
library(knitr)
ls()
rm(list=ls())
setwd("~/Desktop/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",")
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
library(plyr)
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(dplyr)
library(scales)
aov.out <- aov(Mass~Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
aov.out <- aov(Brood ~ Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
MassSummary <- ddply(QueenDF, c("Origin", "MassDay"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm = TRUE),
sd = sd(Mass, na.rm = TRUE),
se = sd / sqrt(n))
MassSummary <- MassSummary[-c(5,10),]
print(MassSummary)
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = NULL, y = "Colony Mass (lbs)", group="the") + coord_cartesian(ylim = c(20, 80), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(.15, .75), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + labs(linetype="Queen Origin") + annotate(geom = "text", x = 70, y = 75, label = "(a)",cex = 6)
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + annotate(geom = "text", x = 70, y = 6.5, label = "(b)",cex = 6)
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
ls()
rm(list=ls())
setwd("~/Desktop/QueenExperimentBurnham")
QueenDF <- read.table("2016QueensHam.csv", header=TRUE, sep = ",")
PollenDF <- read.table("PollenQueens.csv", header=TRUE, sep = ",")
VirusDF <- read.table("RNAVirus.csv", header=TRUE, sep = ",")
library(plyr)
library(ggplot2)
library(grid)
library(dplyr)
library(scales)
aov.out <- aov(Mass~Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
aov.out <- aov(Brood ~ Origin * Time + Error(FieldID), data=QueenDF)
summary(aov.out)
MassSummary <- ddply(QueenDF, c("Origin", "MassDay"), summarise,
n = length(Mass),
mean = mean(Mass, na.rm = TRUE),
sd = sd(Mass, na.rm = TRUE),
se = sd / sqrt(n))
MassSummary <- MassSummary[-c(5,10),]
print(MassSummary)
plot <- ggplot(data = MassSummary,
aes(x = MassDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = NULL, y = "Colony Mass (lbs)", group="the") + coord_cartesian(ylim = c(20, 80), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(.15, .75), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + labs(linetype="Queen Origin") + annotate(geom = "text", x = 70, y = 75, label = "(a)",cex = 6)
BroodSummary <- ddply(QueenDF, c("Origin", "BroodDay"), summarise,
n = length(Brood),
mean = mean(Brood, na.rm = TRUE),
sd = sd(Brood, na.rm = TRUE),
se = sd / sqrt(n))
print(BroodSummary)
plot1 <- ggplot(data = BroodSummary,
aes(x = BroodDay,
y = mean,
group = Origin)
) + geom_point(size=3) + scale_colour_manual(values = c("black", "black")) + labs(x = "Time (days after requeening)", y = "Frames of Brood") + coord_cartesian(ylim = c(2, 7), xlim = c(-5,70)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.9)) + geom_line(aes(linetype=Origin), size=1) + scale_fill_brewer(palette = "Paired") + theme_minimal(base_size = 17) + theme(legend.position=c(3, 3), axis.title.y=element_text(margin=margin(0,20,0,0))) + scale_x_continuous(breaks=pretty_breaks(n=10)) + annotate(geom = "text", x = 70, y = 6.5, label = "(b)",cex = 6)
library(gridExtra)
grid.newpage()
grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
plot
p <- grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
p
library(gridExtra)
grid.newpage()
p <- grid.draw(rbind(ggplotGrob(plot), ggplotGrob(plot1), size = "last"))
p
Resp <- runif(10)
print(Resp)
plot(x=Time, y=Resp, type="b")
Time <- seq(1,10) # seq makes integer sequence!
print(Time) # PRINT IT!
Resp <- runif(10) # get 10 random numbers
print(Resp) # print it
plot(x=Time, y=Resp, type="b")
ls()
rm(list=ls())
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(plyr)
setwd("~/AlgerProjects/2015_Bombus_Survey/CSV_Files")
BombSurv <- read.table("BombSurv.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
BombSurvNHBS <- read.table("BombSurvNHBS.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
BombSurv <- select(BombSurv, -X, -Ct_mean, -Ct_sd, -quantity_mean, -quantity_sd, -run, -date_processed, -dil.factor, -genome_copbee, -Ct_mean_hb, -ID, -ACT_genome_copbee)
BombSurvNHBS <- select(BombSurvNHBS, -City, -Name, -virusBINY_PreFilter)
SiteVirPrev <- ddply(BombSurvNHBS, c("site", "target_name"), summarise,
n = length(virusBINY),
mean = mean(virusBINY, na.rm=TRUE),
sd = sd(virusBINY, na.rm=TRUE),
se = sd / sqrt(n))
SiteVirPrev<-SiteVirPrev[!SiteVirPrev$site==("PITH"),]
SiteVirPrev<-SiteVirPrev[!SiteVirPrev$site==("STOW"),]
SiteVirPrev
spac <- read.table("2015SurveySpatial.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
spac <- select(spac, site, sumApiaries, sumColonies)
data <- merge(SiteVirPrev, spac, by="site")
splitDF <- split(data, data$target_name)
plot(y=splitDF$DWV$mean, x=splitDF$DWV$sumApiaries)
plot(y=splitDF$IAPV$mean, x=splitDF$IAPV$sumApiaries)
plot(y=splitDF$BQCV$mean, x=splitDF$BQCV$sumApiaries)
mymod <- lm(data=splitDF$BQCV, splitDF$BQCV$mean~splitDF$BQCV$sumApiaries)
abline(mymod)
summary(mymod)
plot(y=splitDF$DWV$mean, x=splitDF$DWV$sumColonies)
plot(y=splitDF$IAPV$mean, x=splitDF$IAPV$sumColonies)
plot(y=splitDF$BQCV$mean, x=splitDF$BQCV$sumColonies)
mymod1 <- lm(data=splitDF$BQCV, splitDF$BQCV$mean~splitDF$BQCV$sumColonies)
abline(mymod1)
summary(mymod1)
plot(y=splitDF$DWV$mean, x=splitDF$DWV$sumColonies)
plot(y=splitDF$DWV$mean, x=splitDF$DWV$sumApiaries)
