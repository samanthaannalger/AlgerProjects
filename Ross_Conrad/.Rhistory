ylim=c(0,4),
#main=paste("Mite load by Apiary"),
col.main="black",
font.lab=2,
las=1,
lwd=2,
col = colors,
border="black"
)
abline(a = 3, b = 0, col="red", lwd=3)
# Avergae mites per 100 bees across all apiaries:
Varroa100 <- mean(Varroa100)
# percentage of apiaries positive for varroa mites:
Varroa <- mean(VarroaPA)
# percentage of apiaries that were above the threshold:
VarroaThreshold <- mean(VarroaTHR_PA)
#-------------------------------------------------------------------
# barplot showing nosema load for each of 24 anonamous apiaries
# colors for each apiary in plot
colors<-colorRampPalette(brewer.pal(9,"Blues"))(24)
colors<-rev(colors)
yards <- c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X")
plot3 <- barplot(height=NosMil,
names.arg=yards,
ylab="Nosema spores per 100 bees (in millions)",
xlab="Apiaries",
ylim=c(0,2.5),
#main=paste("Nosema load by Apiary"),
col.main="black",
font.lab=2,
las=1,
lwd=2,
col = colors,
border="black"
)
abline(a = 1, b = 0, col="red", lwd=3)
#Calculating the average Nosema load across all apiaries:
NosemaLoad <- mean(NosMil)
#Percentage of apiaries with Nosema present:
NosemaPrev <- mean(NosemaPA)
# counting the number of apairies with Nosema present:
table(NosemaPA)
#Percentage of apiaries above the threshold:
NosemaThreshold <- mean(NosemaTHR)
# number of apiaries above the threshold
table(NosemaTHR)
SBPV <- mean(SBPV_PA, na.rm = TRUE)
# 95.8% of the apiaries were positive for varroa mites
table(VarooaPA)
# 95.8% of the apiaries were positive for varroa mites
table(VarroaPA)
# percentage of apiaries positive for varroa mites:
Varroa <- mean(VarroaPA)
#Calculating the average Nosema load across all apiaries:
NosemaLoad <- mean(NosMil)
#Percentage of apiaries with Nosema present:
NosemaPrev <- mean(NosemaPA)
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
# Subset the data to exclude Varroa sampling conducting "pre" quick strips
ConradSub<- Conrad[-which(Conrad$PrePostTreatVarroa=="Pre"), ]
# Summary of Varroa
VarSum <- ddply(ConradSub, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
mod <- lmer(data=ConradSub, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(mod)
plot1 <- ggplot(SurvivalSum, aes(x=Treatment, y=mean, fill=Treatment)) +
geom_bar(stat="identity",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="Treatment", y = "% Survival")
plot1 + theme_minimal(base_size = 17) + coord_cartesian(ylim = c(0, 1)) + scale_fill_manual(values=colors, name="", labels=c("Stationary", "Migratory")) + theme(legend.position=c(2, 2)) + scale_y_continuous(labels = scales::percent)
chisq.test(x=Conrad$Treatment, y=Conrad$Survival)
# significant difference between treatments
library("lme4")
Fullmod4 <- glmer(data=Conrad, formula = SurvivalBINY~Treatment + (1|ID), family = binomial(link = "logit"))
StrengthSum <- ddply(Conrad, c("Treatment"), summarise,
n = length(Strength),
mean = mean(Strength, na.rm=TRUE),
sd = sd(Strength, na.rm = TRUE),
se = sd / sqrt(n))
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
Conrad2016<- which(Conrad$year=="2016")
Conrad2017<- which(Conrad$year=="2017")
Conrad2016
View(Conrad2016)
Conrad2016<- which(-Conrad$year=="2017")
View(Conrad2016)
Conrad2016<- subset(Conrad$year=="2017")
Conrad2016<- subset(Conrad$year=="2016")
Conrad2016<- Conrad[Conrad$year=="2016"]
Conrad2016<- Conrad[(Conrad$year=="2016"),]
View(Conrad2016)
Conrad2017<- Conrad[(Conrad$year=="2017"),]
Conrad2017
# find death binary
data$death <- ifelse(data$survivorship==1,0,1)
# find death binary
data$death <- ifelse(Conrad$survivorship==1,0,1)
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
head(Conrad2016)
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(death, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue"))
table(Conrad$season)
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(death, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue"))
table(Conrad$season)
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(death, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue"))
table(Conrad$season)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "red"))
Conrad$season <- as.factor(Conrad$season)
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(death, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "red"))
table(Conrad$season)
View(Conrad)
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE,na.strings=c("","NA"))
View(Conrad)
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(death, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "red"))
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = mean(survivorship, na.rm=TRUE),
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(survivorship),
mean = mean(survivorship, na.rm=TRUE),
sd = sd(survivorship, na.rm = TRUE),
se = sd / sqrt(n))
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "red"))
table(Conrad$season)
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
death <- death[!(death$season == "NA"),]
death
death <- death[!(death$season == NA),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[-(death$season == "NA"),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[(death$season == "NA"),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[(death$season == "NA"),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
death <- death[!(death$season == "NA"),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[!(death$season == "<NA>"),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[!(death$n = NA),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
death <- death[!(death$season = NA),]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
death <- death[-c(2,4,9,11),]
death
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "red"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "black", "slategray"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "purple", "slategray"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "steelblue", "purple", "steelblue"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "slategray", "purple", "steelblue"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "slategray", "darkgreen", "steelblue"))
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[ -which(death$season=="NA"), ]
death
ls()
rm(list=ls())
Conrad <- read.table("ConradSARE_Survivorship.csv",header=TRUE,sep=",",stringsAsFactors=FALSE,na.strings=c("","NA"))
# find death binary
Conrad$death <- ifelse(Conrad$survivorship==1,0,1)
Conrad2016<- Conrad[(Conrad$year=="2016"),]
Conrad2017<- Conrad[(Conrad$year=="2017"),]
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[ -which(death$season=="NA"), ]
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
death <- death[! is.na(death$season=="NA"), ]
death
# summary of death for 2017 conrad
death <- ddply(Conrad2017, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[! is.na(death$season=="NA"), ]
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("goldenrod", "slategray", "darkgreen", "steelblue"))
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[! is.na(death$season=="NA"), ]
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("blue", "slategray", "gray20", "steelblue"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual()
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("blue", "slategray", "gray20", "steelblue"))
library(RColorBrewer)
library(wedanderson)
library(wesanderson)
install.packages("wesanderson")
str(wes_palettes)
z <- (wes_palettes)
library(wesanderson)
install.packages("wesanderson")
library(wesanderson)
z <- (wes_palettes)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c(wes_palettes$Moonrise1))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c(wes_palettes$Moonrise2))
# summary of death for 2017 conrad
death <- ddply(Conrad2017, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[! is.na(death$season=="NA"), ]
library(scales)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c("blue", "slategray", "gray20", "steelblue"))
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c(wes_palettes$Moonrise2))
# summary of death for 2017 conrad
death <- ddply(Conrad2017, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death
# summary of death for 2016 conrad
death <- ddply(Conrad2016, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[! is.na(death$season=="NA"), ]
library(scales)
library(wesanderson)
z <- (wes_palettes)
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "2016 Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c(wes_palettes$Moonrise2))
# summary of death for 2017 conrad
death <- ddply(Conrad2017, c("treatment", "season"), summarise,
n = length(death),
mean = n / 15,
sd = sd(death, na.rm = TRUE),
se = sd / sqrt(n))
death <- death[! is.na(death$season=="NA"), ]
ggplot(data = death,
aes(x=treatment, y=mean,
fill = season)
) + geom_bar(stat = "identity") + labs(x = "Treatment", y = "2017 Percent Losses") + coord_cartesian(ylim = c(0, 1)) + theme_minimal(base_size = 17) + theme(legend.position="top") + scale_y_continuous(labels = percent) + scale_fill_manual(values=c(wes_palettes$Moonrise2))
