ggplot(data = VirusSum3,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Prevalance of BQCV") + coord_cartesian(ylim = c(0, 1), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .2),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
#-----------------------------------------------------------------------------------
# Varroa Load:
# repeated measures anova for Varroa
aov.Var <- aov(Varroa~Treatment * SamplingEvent + Error(ID), data=MigStatExp_1)
summary(aov.Var)
# Summary of Varroa prev. for experiment 1
VarSum <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting Varroa prev. for experiment 1
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees))") + coord_cartesian(ylim = c(0, 3), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
#-----------------------------------------------------------------------------------
# Frames of Bees:
# repeated measures anova for FOB
aov.FOB <- aov(FOB~Treatment * SamplingEvent + Error(ID), data=MigStatExp_1)
summary(aov.FOB)
# Summary of FOB for experiment 1
FOB <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 1
ggplot(data = FOB,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(5, 25), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
#-----------------------------------------------------------------------------------
# Brood Pattern:
# repeated measures anova for Brood Pattern
aov.BroodPat <- aov(BroodPattern~Treatment * SamplingEvent + Error(ID), data=MigStatExp_1)
summary(aov.BroodPat)
# Summary of Brood pat for experiment 1
BroodPat <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(BroodPattern),
mean = mean(BroodPattern, na.rm=TRUE),
sd = sd(BroodPattern, na.rm = TRUE),
se = sd / sqrt(n))
# plotting brood pat for experiment 1
ggplot(data = BroodPat,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Brood Pattern") + coord_cartesian(ylim = c(2, 8), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
#################################################################################################
# DATA ANLAYSIS AND GRAPHICS FOR EXPERIMENT 2:
#################################################################################################
# Setting up dataframe without time point 1 for Experiment 2 data (Stationary vs Exposed)
MigStatExp_2_plot<-MigStat[!(MigStat$SamplingEvent=='1'),]
# same data frame but without migratory for analysis purposes
MigStatExp_2_analysis<-MigStatExp_2_plot[!(MigStatExp_2_plot$Treatment=="Migratory"),]
#-----------------------------------------------------------------------------------
# DWV PREV:
#DWV prevalence using glmer
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = DWVbinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod3)
# Summary of DWV prev. for experiment 2
VirusSum5 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(DWVbinary),
mean = mean(DWVbinary, na.rm=TRUE),
sd = sd(DWVbinary, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 2
ggplot(data = VirusSum5,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Prevalance of DWV") + coord_cartesian(ylim = c(0, 1), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# DWV VL:
# repeated measures anova for DWV
aov.DWV2 <- aov(logDWV~Treatment * SamplingEvent + Error(ID), data=MigStatExp_2_analysis)
summary(aov.DWV2)
DWV2full <- lmer(logDWV~Treatment * SamplingEvent + (1|ID), data=MigStatExp_2_analysis)
DWVnull <- lmer(logDWV~SamplingEvent + (1|ID), data=MigStatExp_2_analysis)
anova(DWV2full, DWVnull)
Anova(DWV2full)
# Summary of DWV VL for experiment 2
VirusSum6 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(logDWV),
mean = mean(logDWV, na.rm=TRUE),
sd = sd(logDWV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV VL for experiment 2
ggplot(data = VirusSum6,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "DWV log(genome copies/bee)") + coord_cartesian(ylim = c(0, 17), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# Varroa Load:
# repeated measures anova for Varroa
aov.Var2 <- aov(Varroa~Treatment * SamplingEvent + Error(ID), data=MigStatExp_2_analysis)
summary(aov.Var2)
# Summary of varroa load for experiment 2
VarSum2 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting varroa load for experiment 2
ggplot(data = VarSum2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Varroa (mites/100 bees)") + coord_cartesian(ylim = c(0, 5), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# BQCV PREV:
#BQCV prevalence using glmer
Fullmod4 <- glmer(data=MigStatExp_2_analysis, formula = BQCVbinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod4)
# Summary of BQCV prev. for experiment 2
VirusSum7 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(BQCVbinary),
mean = mean(BQCVbinary, na.rm=TRUE),
sd = sd(BQCVbinary, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV prev. for experiment 2
ggplot(data = VirusSum7,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Prevalance of BQCV") + coord_cartesian(ylim = c(0, 1), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .2), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# BQCV VL:
# repeated measures anova for BQCV
aov.BQCV2 <- aov(logBQCV~Treatment * SamplingEvent + Error(ID), data=MigStatExp_2_analysis)
summary(aov.BQCV2)
# Summary of BQCV VL for experiment 2
VirusSum8 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(logBQCV),
mean = mean(logBQCV, na.rm=TRUE),
sd = sd(logBQCV, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV VL for experiment 2
ggplot(data = VirusSum8,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "BQCV log(genome copies/bee)") + coord_cartesian(ylim = c(10, 25), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# Brood Pattern:
# repeated measures anova for BroodPat
aov.BroodPat2 <- aov(BroodPattern~Treatment * SamplingEvent + Error(ID), data=MigStatExp_2_analysis)
summary(aov.BroodPat2)
# Summary of BroodPat for experiment 2
BroodPat2 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(BroodPattern),
mean = mean(BroodPattern, na.rm=TRUE),
sd = sd(BroodPattern, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BroodPat for experiment 2
ggplot(data = BroodPat2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Brood Pattern") + coord_cartesian(ylim = c(3, 5), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
#-----------------------------------------------------------------------------------
# Frames of Bees:
# repeated measures anova for FOB
aov.FOB2 <- aov(FOB~Treatment * SamplingEvent + Error(ID), data=MigStatExp_2_analysis)
summary(aov.FOB2)
# Summary of FOB for experiment 2
FOB2 <- ddply(MigStatExp_2_plot, c("Treatment", "SamplingEvent"), summarise,
n = length(FOB),
mean = mean(FOB, na.rm=TRUE),
sd = sd(FOB, na.rm = TRUE),
se = sd / sqrt(n))
# plotting FOB for experiment 2
ggplot(data = FOB2,
aes(x = SamplingEvent,
y = mean,
col = Treatment,
linetype= Treatment)
) + geom_point(size=4) + scale_colour_manual(values = c("black", "darkgrey", "black")) + scale_linetype_manual(values = c(1, 1, 2)) + labs(x = "Sampling Event", y = "Frames of Bees") + coord_cartesian(ylim = c(10, 30), xlim = c(2,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05), linetype=1, show.legend=FALSE) + geom_line(size=1.5) + theme_classic(base_size = 17) + theme(legend.position=c(.2, .85), legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_continuous(breaks=c(2,3))
Fullmod4 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod4)
MigStat$VarroaBinary
#Varroa prevalence using glmer
Fullmod4 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
#Varroa prevalence using glmer
Fullmod2 <- glmer(data=MigStatExp_1, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod2)
# Summary of BQCV prev. for experiment 1
VirusSum3 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
VirusSum3 <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(VarroaBinary),
mean = mean(VarroaBinary, na.rm=TRUE),
sd = sd(VarroaBinary, na.rm = TRUE),
se = sd / sqrt(n))
# plotting BQCV prev. for experiment 1
Anova(Fullmod2)
# Summary of Varroa prev. for experiment 1
VarroaBin <- ddply(MigStatExp_1, c("Treatment", "SamplingEvent"), summarise,
n = length(VarroaBinary),
mean = mean(VarroaBinary, na.rm=TRUE),
sd = sd(VarroaBinary, na.rm = TRUE),
se = sd / sqrt(n))
# plotting Varroa prev. for experiment 1
ggplot(data = VarroaBin,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Prevalance of BQCV") + coord_cartesian(ylim = c(0, 1), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.2, .2),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
ggplot(data = VarroaBin,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Prevalance of Varroa") + coord_cartesian(ylim = c(0, 1), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.7, .2),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
ggplot(data = VarroaBin,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Prevalance of Varroa") + coord_cartesian(ylim = c(0, 1), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.9, .2),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
ggplot(data = VarroaBin,
aes(x = SamplingEvent,
y = mean,
group = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Prevalance of Varroa") + coord_cartesian(ylim = c(0, 1), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(aes(linetype=Treatment), size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.8, .2),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(linetype="Operation Type:") + scale_x_continuous(breaks=c(1,2,3))
# Setting up dataframe without time point 1 for Experiment 2 data (Stationary vs Exposed)
MigStatExp_2_plot<-MigStat[!(MigStat$SamplingEvent=='1'),]
# same data frame but without migratory for analysis purposes
MigStatExp_2_analysis<-MigStatExp_2_plot[!(MigStatExp_2_plot$Treatment=="Migratory"),]
#-----------------------------------------------------------------------------------
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
#Varroa prevalence using glmer
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
MigStat$
lksjd
MigStatExp_2_analysis$VarroaBinary
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
MigStatExp_2_analysis$SamplingEvent
MigStatExp_2_analysis$Treatment
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Anova(Fullmod3)
Fullmod10 <- glmer(data=MigStatExp_2_analysis, formula = VarroaBinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
Fullmod3 <- glmer(data=MigStatExp_2_analysis, formula = DWVbinary~Treatment * SamplingEvent + (1|ID), family = binomial(link = "logit"))
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
###############################################################
# Varroa Figure
# repeated measures anova for varroa load
# Summary of Varroa
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3)) + scale_color_manual(values=colors)
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3)) + scale_color_manual(values=colors)
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
###############################################################
# Varroa Figure
# repeated measures anova for varroa load
# Summary of Varroa
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,3)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3)) + scale_color_manual(values=colors)
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
mod <- lmer(data=Conrad, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(mod)
###############################################################
# Honey Figure
HoneySum <- ddply(Conrad, c("Treatment"), summarise,
n = length(Honey),
mean = mean(Honey, na.rm=TRUE),
sd = sd(Honey, na.rm = TRUE),
se = sd / sqrt(n))
HoneySum[3,5] <- NA
colors <- c("slategray3", "dodgerblue4", "black", "blue")
plot1 <- ggplot(HoneySum, aes(x=Treatment, y=mean, fill=Treatment)) +
geom_bar(stat="identity",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="Treatment", y = "Honey Harvested (# Supers)")
plot1 + theme_minimal(base_size = 17) + coord_cartesian(ylim = c(0, 2)) + scale_fill_manual(values=colors, name="", labels=c("Stationary", "Migratory")) + theme(legend.position=c(2, 2))
#ANOVA testing honey
HoneyModel <- aov(data=Conrad, Honey~Treatment)
summary(HoneyModel)
TukeyHSD(HoneyModel)
# Significant difference in honey between treatments.
# C and QS=A
# TF and TFQ=B
###############################################################
# Survival Figure
Conrad$SurvivalBINY <- ifelse(Conrad$Survival=="Yes",1,0)
SurvivalSum <- ddply(Conrad, c("Treatment"), summarise,
n = length(SurvivalBINY),
mean = mean(SurvivalBINY, na.rm=TRUE),
sd = sd(SurvivalBINY, na.rm = TRUE),
se = sd / sqrt(n))
colors <- c("slategray3", "dodgerblue4", "black", "blue")
plot1 <- ggplot(SurvivalSum, aes(x=Treatment, y=mean, fill=Treatment)) +
geom_bar(stat="identity",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.4,
position=position_dodge(.9)) + labs(x="Treatment", y = "% Survival")
plot1 + theme_minimal(base_size = 17) + coord_cartesian(ylim = c(0, 1)) + scale_fill_manual(values=colors, name="", labels=c("Stationary", "Migratory")) + theme(legend.position=c(2, 2)) + scale_y_continuous(labels = scales::percent)
# chi square testing Survival
mod <- lmer(data=Conrad, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(mod)
###############
# Data Analysis for Ross Conrad SARE project
# Samantha Alger and P. Alexander Burnham
# September 12, 2017
###########################################################################################
#Preliminaries:
# Clear memory of characters
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
###############################################################
# Varroa Figure
# repeated measures anova for varroa load
# Summary of Varroa
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
mod <- lmer(data=Conrad, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(mod)
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
###############################################################
# Varroa Figure
# repeated measures anova for varroa load
# Summary of Varroa
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
ls()
rm(list=ls())
# Call Packages
library("RColorBrewer")
library("ggplot2")
library("dplyr")
library("plyr")
library("spdep")
library("ape")
library("lme4")
library("car")
library("ape")
library("MuMIn")
library("MASS")
# Set Working Directory
setwd("~/AlgerProjects/Ross_Conrad/")
# load in data
Conrad <- read.table("ConradSARE.csv",header=TRUE,sep=",",stringsAsFactors=FALSE)
View(Conrad)
###############################################################
# Varroa Figure
# repeated measures anova for varroa load
# Summary of Varroa
VarSum <- ddply(Conrad, c("Treatment", "SamplingEvent"), summarise,
n = length(Varroa),
mean = mean(Varroa, na.rm=TRUE),
sd = sd(Varroa, na.rm = TRUE),
se = sd / sqrt(n))
# plotting DWV prev. for experiment 1
colors <- c("slategray3", "dodgerblue4", "black", "blue")
ggplot(data = VarSum,
aes(x = SamplingEvent,
y = mean,
color = Treatment)
) + geom_point(size=4) + labs(x = "Sampling Event", y = "Varroa (mites/300 bees)") + coord_cartesian(ylim = c(0, 40), xlim = c(1,4)) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se, width = 0.05)) + geom_line(size=1.5) + scale_fill_brewer(palette = "Paired") + theme_classic(base_size = 17) + theme(legend.position=c(.85, .85),legend.key.width=unit(5,"line"), panel.border = element_blank(), axis.line.x = element_line(colour = 'black', size=0.5, linetype='solid'), axis.line.y = element_line(colour = 'black', size=0.5, linetype='solid'), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + labs(color="Treatment:") + scale_x_continuous(breaks=c(1,2,3,4)) + scale_color_manual(values=colors)
mod <- lmer(data=Conrad, formula = Varroa~Treatment * SamplingEvent + (1|ID))
Anova(mod)
