# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right")
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
head(states)
View(states)
View(AIPReg)
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right")
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right")
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right")
View(AIPReg)
table(AIPReg$Contacted)
factor(AIPReg$Contacted)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="New Legend Title"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) +
factor(AIPReg$Contacted)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) +
factor(AIPReg$Contacted)
factor(AIPReg$Contacted)
AIPReg$Contracted <- as.factor(AIPReg$Contacted)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
AIPReg$Contracted <- as.character(AIPReg$Contacted)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
table(AIPReg$Contacted)
str(AIPReg$Contacted)
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
str(AIPReg$Contacted)
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
AIPReg
View(AIPReg)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black", fill = "Contacted") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black", colors = "Contacted") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black", colors = "Contacted") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_colors_manual(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right", colors = "Contacted") + guides(fill=guide_legend(title="")) + scale_colors_manual(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_values_manual(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_discrete(values = c("blue", "white"))
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_discrete(values = c("blue", "white"))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + labels = TRUE
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black", labels = TRUE) + theme(legend.position = "right") + guides(fill=guide_legend(title=""))
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_continuous(low = "blue", high = "yellow", guide = FALSE)
?scale_fill_discrete
fill.colors <- c("palegreen", "green")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
fill.colors <- c("yellow3", "orange")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
fill.colors <- c("grey", "orange")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# Remove all rows with NAs
AIPReg <- OriginData[! is.na(AIPReg$Contacted), ]
# Remove all rows with NAs
AIPReg <- AIPReg[! is.na(AIPReg$Contacted), ]
fill.colors <- c("grey", "orange")
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
filter(AIPReg, !is.na(Contacted)) %>%
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
filter(AIPReg, !is.na(Contacted)) %>%
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""), legend.text=element_text(size=20))) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""), legend.text=element_text(size=20)) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right") + guides(fill=guide_legend(title=""), legend.text=element_text(size=50)) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=50)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=10)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
usmap::plot_usmap(data = AIPReg, values = "Contacted", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
# Remove all rows with NAs
AIPReg <- AIPReg[! is.na(AIPReg$Contacted), ]
fill.colors <- c("blue", "lightblue", "orange", "purple", "grey")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
fill.colors <- c("blue", "lightblue", "orange", "purple", "grey")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# reorder for plotting
AIPReg$OverallRegistrationType <- factor(AIPReg$OverallRegistrationType, levels = c("Mandatory Commercial","Mandatory Universal","Voluntary", "No Registration Program","N/A"))
fill.colors <- c("blue", "lightblue", "orange", "purple", "grey")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
fill.colors <- c("blue", "lightblue", "orange", "grey", "white")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black", labels = TRUE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black", labels = TRUE), + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", labels = TRUE, lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", theme = theme_map(), lines = "black", labels = FALSE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", theme = theme_map(), lines = "black", labels = TRUE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", labels = TRUE, lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", labels = TRUE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
View(AIPReg)
state_map <- us_map(regions = "states")
state_map
head(state_map)
head(AIPReg)
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
names(AIPReg)[names(AIPReg) == "state"] <- "abbr"
# reorder for plotting
AIPReg$OverallRegistrationType <- factor(AIPReg$OverallRegistrationType, levels = c("Mandatory Commercial","Mandatory Universal","Voluntary", "No Registration Program","N/A"))
fill.colors <- c("blue", "lightblue", "orange", "grey", "white")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
# reorder for plotting
AIPReg$OverallRegistrationType <- factor(AIPReg$OverallRegistrationType, levels = c("Mandatory Commercial","Mandatory Universal","Voluntary", "No Registration Program","N/A"))
fill.colors <- c("blue", "lightblue", "orange", "grey", "white")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
View(AIPReg)
names(AIPReg)[names(AIPReg) == "state"] <- "abbr"
names(AIPReg)[names(AIPReg) == "State"] <- "state"
# reorder for plotting
AIPReg$OverallRegistrationType <- factor(AIPReg$OverallRegistrationType, levels = c("Mandatory Commercial","Mandatory Universal","Voluntary", "No Registration Program","N/A"))
fill.colors <- c("blue", "lightblue", "orange", "grey", "white")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black", labels = TRUE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", labels = TRUE) + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# AIP Mapping
# S. Alger
# Sep. 12, 2018
# Clear memory of characters:
ls()
rm(list=ls())
# Set Working Directory:
setwd("~/AlgerProjects/VTApiaries/")
# read in data:
AIPReg <- read.csv("CSV_files/AIPRegistrationType.csv",                    header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
states <- read.csv("CSV_files/USstates.csv",
header=TRUE,
sep = ",",
stringsAsFactors = FALSE)
#Get libraries
library(usmap)
library(maps)
library(ggplot2)
library(noncensus)
#download fips codes dataset
data(counties)
# merge dataframes so that states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, states, by= "State")
# Change column name abb -> state
names(AIPReg)[names(AIPReg) == "abb"] <- "state"
#continuing to merge dataframes so states are listed with their 'fips IDs' (needed to map)
AIPReg <- merge(AIPReg, counties, by = "state")
# Remove duplicates based on state (getting rid of excess data from fips database)
AIPReg <- AIPReg[!duplicated(AIPReg["State"]),]
#Selecting only columns I want
AIPReg <- dplyr::select(AIPReg, state, State, OverallRegistrationType, Contacted,StateID, state_fips)
# reorder for plotting
AIPReg$OverallRegistrationType <- factor(AIPReg$OverallRegistrationType, levels = c("Mandatory Commercial","Mandatory Universal","Voluntary", "No Registration Program","N/A"))
fill.colors <- c("blue", "lightblue", "orange", "grey", "white")
#Create Map:
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# choose colors
fill.colors <- c("orange", "lightblue", "yellow", "grey", "white")
#plot map
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# choose colors
fill.colors <- c("orange", "steelblue", "yellow", "grey", "white")
#plot map
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# choose colors
fill.colors <- c("orange", "steelblue", "gold", "grey", "white")
#plot map
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# choose colors
fill.colors <- c("orange", "steelblue2", "gold", "grey", "white")
#plot map
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
# choose colors
fill.colors <- c("orange", "steelblue2", "gold", "snow4", "white")
#plot map
usmap::plot_usmap(data = AIPReg, values = "OverallRegistrationType", lines = "black") + theme(legend.position = "right", legend.text=element_text(size=15)) + guides(fill=guide_legend(title="")) + scale_fill_manual(values = fill.colors)
